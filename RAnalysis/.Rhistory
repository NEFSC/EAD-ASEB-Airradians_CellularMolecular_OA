scale_colour_manual(breaks=c("Low pCO2", "Moderate pCO2", "High pCO2"),
values=c("forestgreen","orange", "purple")) +
geom_point(aes(colour = Larvae_pCO2),
position = position_dodge2(width = 0.2)) +
stat_summary(fun.y="mean", size = 0.8, color = "black",
position = position_dodge2(width = 1)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 1)) +
labs(title="Experiment #6 (F3)",
x ="pCO2 Offspring Exposure",
y = "Percent Abnormalities") +
scale_x_discrete(labels=c("L", "M", "H")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = seq(0, 1, by = 0.25)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.title.y=element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=8),
plot.title = element_text(size=12),
legend.position="none")  +
facet_wrap(~Parent_pCO2)
print(Exp6_MeanSE)
# output yo stuff homie!
write.csv(Exp3_mean_deformaties,"Output/Physiology/Dstage_abnormalities/Experiment6_Mean_Abnormalities.csv")
# output yo stuff homie!
write.csv(Exp6_mean_deformaties,"Output/Physiology/Dstage_abnormalities/Experiment6_Mean_Abnormalities.csv")
write.csv(Exp6_mean_deformaties,"Output/Physiology/Dstage_abnormalities/Mean_Abnormalities.csv")
pdf("Output/Physiology/Dstage_abnormalities/MeanSE_Abnormalities.pdf", width = 5, height = 12) # three figures
ggarrange(
Exp6_barplot,
Exp6_boxplot,
Exp6_MeanSE,
nrow = 3
)
dev.off()
library(ggplot2)
library(gridExtra)
library(grid)
Exp6_MeanSE
pushViewport(viewport(layout = grid.layout(2, 4))) # 3 rows, 5 columns
grid.text("Percent Abnormalities", vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
print(Exp6_MeanSE, vp = vplayout(2, 3:4))
print(Exp6_MeanSE, vp = vplayout(2, 3:4))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 4))) # 3 rows, 5 columns
grid.text("Percent Abnormalities", vp = viewport(layout.pos.row = 1, layout.pos.col = 1:2))
print(Exp6_MeanSE, vp = vplayout(2, 3:4))
aovMOD_Exp6 <- lm(Percent.deformed ~ Larvae_pCO2 * Parent_pCO2, data=df_Exp6)
shapiro.test(resid(aovMOD_Exp6)) # 0.8472 - norm
leveneTest(aovMOD_Exp6) # 0.4374- pass
summary(aov(aovMOD_Exp6))
capture.output(summary(aov(aovMOD_Exp6)),file="Output/Physiology/Dstage_abnormalities/ANOVA.doc")
aovMOD_Exp6_means_contr <- emmeans::emmeans(object = aovMOD_Exp6, # run tukey
pairwise ~ "Larvae_pCO2",
adjust = "tukey")
aovMOD_Exp6_mod_means   <- multcomp::cld(object = aovMOD_Exp6_means_contr$emmeans, Letters = letters) # letter display\
aovMOD_Exp6_mod_means
capture.output(aovMOD_Exp6_mod_means,file="Output/Physiology/Dstage_abnormalities/TukeyHSD.doc")
ggplot(df_Exp6,aes(x=Larvae_pCO2,
y=Percent.deformed,
colour=Larvae_pCO2)) +
# scale_linetype(c("dotted","solid")) +
scale_colour_manual(breaks=c("Low pCO2", "Moderate pCO2", "High pCO2"),
values=c("forestgreen","orange", "purple")) +
geom_point(aes(colour = Larvae_pCO2),
position = position_dodge2(width = 0.2)) +
stat_summary(fun.y="mean", size = 0.8, color = "black",
position = position_dodge2(width = 1)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 1)) +
labs(title="Experiment #6 (F3)",
x ="pCO2 Offspring Exposure",
y = "Percent Abnormalities") +
scale_x_discrete(labels=c("L", "M", "H")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = seq(0, 1, by = 0.25)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.title.y=element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=8),
plot.title = element_text(size=12),
legend.position="none")
pdf("Output/Physiology/Dstage_abnormalities/MeanSE_Abnormalities_pCO2ExposureEffect.pdf", width = 5, height = 4) # three figures
print(
pCO2exposureEffect
)
# plot the associated effect just the pCO2 exposure treatment
pCO2exposureEffect <- ggplot(df_Exp6,aes(x=Larvae_pCO2,
y=Percent.deformed,
colour=Larvae_pCO2)) +
# scale_linetype(c("dotted","solid")) +
scale_colour_manual(breaks=c("Low pCO2", "Moderate pCO2", "High pCO2"),
values=c("forestgreen","orange", "purple")) +
geom_point(aes(colour = Larvae_pCO2),
position = position_dodge2(width = 0.2)) +
stat_summary(fun.y="mean", size = 0.8, color = "black",
position = position_dodge2(width = 1)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 1)) +
labs(title="Experiment #6 (F3)",
x ="pCO2 Offspring Exposure",
y = "Percent Abnormalities") +
scale_x_discrete(labels=c("L", "M", "H")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1), breaks = seq(0, 1, by = 0.25)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.title.y=element_blank(),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=8),
plot.title = element_text(size=12),
legend.position="none")
pdf("Output/Physiology/Dstage_abnormalities/MeanSE_Abnormalities_pCO2ExposureEffect.pdf", width = 5, height = 4) # three figures
print(
pCO2exposureEffect
)
dev.off()
df_6 <- df %>%
filter(Run=="6")
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis/Data")
# knitr::opts_knit$set(root.dir = "C:/Users/samgj/Documents/Github_repositories/EAD-ASEB-Airradians_F3_Larvae_OA/RAnalysis") # Sam's
knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Airradians_F3_Larvae_OA/RAnalysis") # Sam's
library(ggplot2)
library(tidyr)
library(dplyr)
library(emmeans)
library(rcompanion)
library(FSA)
#Here we are assing our data fram the name "df" so that we do not have to type out the full file name everytime we want to call it.
df<-read.csv("metamorphosis.csv", header = T)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Airradians_Larvae_crossgen_OA/RAnalysis/Data")
# knitr::opts_knit$set(root.dir = "C:/Users/samgj/Documents/Github_repositories/EAD-ASEB-Airradians_F3_Larvae_OA/RAnalysis") # Sam's
knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Airradians_F3_Larvae_OA/RAnalysis") # Sam's
#Here we are assing our data fram the name "df" so that we do not have to type out the full file name everytime we want to call it.
df<-read.csv("DAta/Physiology/metamorphosis.csv", header = T)
#Here we are assing our data fram the name "df" so that we do not have to type out the full file name everytime we want to call it.
df<-read.csv("DAta/Physiology/metamorphosis.csv", header = T)
#df$Percent.deformed=as.numeric(df$Percent.deformed)
df$Parent=as.factor(df$Parent)
df$Ttreatment=as.factor(df$Treatment)
df$Exposure.OA=as.factor(df$Exposure.OA)
df$Rep=as.factor(df$Rep)
df$Generation=as.factor(df$Generation)
df$Treatment <- factor(df$Treatment,levels = c("Low OA", "Moderate OA", "High OA"))
df$Exposure.OA <- factor(df$Exposure.OA,levels = c("LOW", "MODERATE", "HIGH"))
df$Parent <- factor(df$Parent,levels = c("LOW", "MODERATE", "HIGH"))
#to look at columns names of your data frame
head(df)
#Sturcture of the data - to check that variables are properly assigned to facotr or variable
str(df)
df$precent.metamorphose <- (df$live_spat)/(df$live_spat+df$live_larvae)
df
df_F3_19 <- df%>%
filter(Age=="19")
df_F3_19
ggplot(data=df_F3_19, aes(x=Exposure.OA, y=precent.metamorphose, fill=Exposure.OA)) +
geom_boxplot()+  scale_fill_manual(values=c("forestgreen","orange", "purple"))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs( x ="Treatment", y = "Percent metamorphosed")+
ggtitle("Percent metamorphesed rouped by parentage (2023: F3 Larvae - Age 19 days) ")+
facet_wrap("Parent")
ggplot(data=df_F3_19, aes(x=Exposure.OA, y=metamorphesed, fill=Exposure.OA)) +
geom_boxplot()+  scale_fill_manual(values=c("forestgreen","orange", "purple"))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title="Percent metamorphesed, grouped by parentage (2023: F3 Larvae - Age 19 days) ", x ="Treatment", y = "Percent metamorphosed")+
facet_wrap("Parent")
df_F3_19_trim <- df_F3_19%>%
filter(Parent %in% c("HIGH", "LOW"))
ggplot(data=df_F3_19_trim, aes(x=Exposure.OA, y=metamorphesed, fill=Exposure.OA)) +
geom_boxplot()+  scale_fill_manual(values=c("forestgreen","orange", "purple"))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title="Percent metamorphesed, grouped by parentage (2023: F3 Larvae - Age 19 days) ", x ="Treatment", y = "Percent sucessful metamorphosis")+
facet_wrap("Parent")
df$sucessful.metamorphosis_trans <- asin(sqrt(df$sucessful.metamorphosis))
df_F3_19 <- df%>%
filter(Age=="19")
aovMOD_F3_19 <- lm(sucessful.metamorphosis ~ Parent * Exposure.OA, data=df_F3_19, random = ~Rep)
shapiro.test(resid(aovMOD_F3_19)) # 0.001961 -  not norm
leveneTest(aovMOD_F3_19) # 0.5261- pass
df$sucessful.metamorphosis_trans <- asin(sqrt(df$sucessful.metamorphosis))
aovMOD_F3_19 <- lm(sucessful.metamorphosis_trans ~ Parent * Exposure.OA, data=df_F3_19)
shapiro.test(resid(aovMOD_F3_19)) # 0.05757 -  norm
leveneTest(aovMOD_F3_19) # 0.364- pass
summary(aov(aovMOD_F3_19))
aovMOD_F3_19_posthoc <- emmeans(aovMOD_F3_19, pairwise~Parent, adjust="tukey")
multcomp::cld(aovMOD_F3_19_posthoc$emmeans,alpha = 0.5, Letters = letters)
aovMOD_F3_19 <- lm(sucessful.metamorphosis ~ Parent * Exposure.OA, data=df_F3_19, random = ~Rep)
shapiro.test(resid(aovMOD_F3_19)) # 0.001961 -  not norm
leveneTest(aovMOD_F3_19) # 0.5261- pass
srh_F3_19 <- scheirerRayHare(sucessful.metamorphosis ~ Parent * Exposure.OA, data=df_F3_19)
summary(srh_F3_19)
srh_F3_19
srh_F3_19 <- scheirerRayHare(sucessful.metamorphosis_trans ~ Parent * Exposure.OA, data=df_F3_19)
srh_F3_19
aovMOD_F3_19 <- lm(sucessful.metamorphosis_trans ~ Parent * Exposure.OA, data=df_F3_19)
shapiro.test(resid(aovMOD_F3_19)) # 0.05757 -  norm
leveneTest(aovMOD_F3_19) # 0.364- pass
summar(aovMOD_F3_19)
summary(aovMOD_F3_19)
aovMOD_F3_19 <- lm(sucessful.metamorphosis_trans ~ Parent * Exposure.OA, data=df_F3_19)
shapiro.test(resid(aovMOD_F3_19)) # 0.05757 -  norm
leveneTest(aovMOD_F3_19) # 0.364- pass
summary(aovMOD_F3_19)
aovMOD_F3_19 <- lm(sucessful.metamorphosis_trans ~ Parent, data=df_F3_19)
shapiro.test(resid(aovMOD_F3_19)) # 0.05757 -  norm
leveneTest(aovMOD_F3_19) # 0.364- pass
summary(aovMOD_F3_19)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
library(WGCNA) # note: this was previously installed with the command `BiocManager::install("WGCNA")`
library(dplyr)
library(zoo)
library(DESeq2)
# for heatmap
# library(devtools)
# install_github("jokergoo/ComplexHeatmap") first run these - commented out to avoid running a second time...
library(ComplexHeatmap)
library(circlize)
library(reshape)
library(ggplot2)
library(hrbrthemes)
?Heatmap
?cutreeStatic
?hclust
?DESeqDataSetFromMatrix
setwd("C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis") # personal computer
# count matrix from prepDE.py script
# NOTE: aligned to the Airradians draft and unannotated genome!
raw.countmatrix  <- read.csv(file="Output/Transcriptomics/raw_count_matrix_all.csv", header=T) %>%
dplyr::rename(transcript_id = X)
raw.countmatrix[is.na(raw.countmatrix)] <- 0 # replace all occurances of NA with 0 in the cell NOT THE WHOLE ROW!
nrow(raw.countmatrix) # 49900 total transcripts
filtered.countmatrix  <- read.csv(file="Output/Transcriptomics/Filtered_count_matrix/filtered_count_matrix_all.csv", header=T) %>%
dplyr::rename(transcript_id = X)
filtered.countmatrix[is.na(filtered.countmatrix)] <- 0 # replace all occurances of NA with 0 in the cell NOT THE WHOLE ROW!
nrow(filtered.countmatrix) # 10001 total transcripts
# Airradians reference file
seq_ref_Airradians  <- read.csv(file="Data/Transcriptomics/hpc_out/diamond/GCF_041381155.1_Ai_NY_genomic_ID_REFERENCE.csv", header=F) %>%
tidyr::separate(V1, into = c("NCBI_refseq", "transcript_id", "gene_id"), sep = " ") %>%
dplyr::mutate(gene_id = gsub(".*gene-", "", gene_id), # convert gene-LOC138315196 to just LOC138315196
sseqid  = paste0(NCBI_refseq,"_cds",gene_id)) # the diamond sseqid name to get cvirg KEGG and cgig IDs
raw.countmatrix.REFS <- merge(raw.countmatrix, seq_ref_Airradians, by = 'transcript_id') # 47704 - there are some omitted accession IDs
# Get the GO terms fromthe Cvirgnica genome - the bst annoation of a Atlantic mollusc to date
# call the Cvirginica database of protein names and transcript ID calls
Cvirg_seqID      <-  as.data.table(read.delim2(file = "Data/Transcriptomics/metadata/seq_id.txt", header =F)) %>%
`colnames<-`("fullID")
nrow(Cvirg_seqID) # 66625
# Airradians reference file
seq_ref_Airradians  <- read.csv(file="Data/Transcriptomics/hpc_out/diamond/GCF_041381155.1_Ai_NY_genomic_ID_REFERENCE.csv", header=F) %>%
tidyr::separate(V1, into = c("NCBI_refseq", "transcript_id", "gene_id"), sep = " ") %>%
dplyr::mutate(gene_id = gsub(".*gene-", "", gene_id), # convert gene-LOC138315196 to just LOC138315196
sseqid  = paste0(NCBI_refseq,"_cds",gene_id)) # the diamond sseqid name to get cvirg KEGG and cgig IDs
raw.countmatrix.REFS <- merge(raw.countmatrix, seq_ref_Airradians, by = 'transcript_id') # 47704 - there are some omitted accession IDs
# Get the GO terms fromthe Cvirgnica genome - the bst annoation of a Atlantic mollusc to date
# call the Cvirginica database of protein names and transcript ID calls
Cvirg_seqID      <-  as.data.table(read.delim2(file = "Data/Transcriptomics/metadata/seq_id.txt", header =F)) %>%
`colnames<-`("fullID")
Cvirg_GOterms    <-  read.csv(file = "Data/Transcriptomics/metadata/Cviginiva_GOterms.csv", header =T) %>%
dplyr::select(c('GeneID','Annotation_GO_ID', 'Length')) %>%
dplyr::group_by(GeneID) %>% # tif you add GO column here we get duplicates, some of the same gene ID calls (of diff length) have GO term or do not, weird!
dplyr::summarise(
meanLength = mean(Length)) %>%
unique() # there are many redundant rows here
subset(Cvirg_GOterms,duplicated(GeneID)) # no duplicates, BUT need to filter in the GO terms here
Cvirg_GOterms2 <- merge(Cvirg_GOterms,
( unique(read.csv(file = "Data/Transcriptomics/metadata/Cviginiva_GOterms.csv", header =T) %>%
dplyr::select(c('GeneID','Annotation_GO_ID')) %>%
dplyr::filter(!Annotation_GO_ID == "")) ),
by = 'GeneID')
nrow(Cvirg_GOterms2) #19667
# Now with the AirradiansIDs and the Cvirgnica GO term refernce - load in the blastx we execuate on SEDNA
# of the Airradians protein database to the Cvirginina and the Cgigas queries to merge their annotation  (GO and KEGG)
# diamond result to obtain accession IDs of annotated genes Cvirg and Cgigas for gene ID, GO, and KEGG ID information
#(1) Airradians protein database (...pep.fna file) with Cvirginica nucleotide query
blastx_Airr_Cvirg <- as.data.table(read.delim2(file="Data/Transcriptomics/hpc_out/diamond/AirrProDB_CvirgNQuery/blastx_AirrProDB_CvirgNQuery_out", header=F)) %>%
`colnames<-`(c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore"))
#(2) Airradians protein database to the Cgigas KEGG query
blastx_Airr_Cgig  <- as.data.table(read.delim2(file="Data/Transcriptomics/hpc_out/diamond/AirrProDB_CgigNKEGGQuery/blastx_AirrProDB_CgigNKEGGNQuery_out", header=F)) %>%
`colnames<-`(c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore"))
library(dplyr)
library(kableExtra)
library(pander)
Cvirg_GOterms2 <- merge(Cvirg_GOterms,
( unique(read.csv(file = "Data/Transcriptomics/metadata/Cviginiva_GOterms.csv", header =T) %>%
dplyr::select(c('GeneID','Annotation_GO_ID')) %>%
dplyr::filter(!Annotation_GO_ID == "")) ),
by = 'GeneID')
# Now with the AirradiansIDs and the Cvirgnica GO term refernce - load in the blastx we execuate on SEDNA
# of the Airradians protein database to the Cvirginina and the Cgigas queries to merge their annotation  (GO and KEGG)
# diamond result to obtain accession IDs of annotated genes Cvirg and Cgigas for gene ID, GO, and KEGG ID information
#(1) Airradians protein database (...pep.fna file) with Cvirginica nucleotide query
blastx_Airr_Cvirg <- as.data.table(read.delim2(file="Data/Transcriptomics/hpc_out/diamond/AirrProDB_CvirgNQuery/blastx_AirrProDB_CvirgNQuery_out", header=F)) %>%
`colnames<-`(c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore"))
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(devtools)
# Now with the AirradiansIDs and the Cvirgnica GO term refernce - load in the blastx we execuate on SEDNA
# of the Airradians protein database to the Cvirginina and the Cgigas queries to merge their annotation  (GO and KEGG)
# diamond result to obtain accession IDs of annotated genes Cvirg and Cgigas for gene ID, GO, and KEGG ID information
#(1) Airradians protein database (...pep.fna file) with Cvirginica nucleotide query
blastx_Airr_Cvirg <- as.data.table(read.delim2(file="Data/Transcriptomics/hpc_out/diamond/AirrProDB_CvirgNQuery/blastx_AirrProDB_CvirgNQuery_out", header=F)) %>%
`colnames<-`(c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore"))
#(2) Airradians protein database to the Cgigas KEGG query
blastx_Airr_Cgig  <- as.data.table(read.delim2(file="Data/Transcriptomics/hpc_out/diamond/AirrProDB_CgigNKEGGQuery/blastx_AirrProDB_CgigNKEGGNQuery_out", header=F)) %>%
`colnames<-`(c("qseqid", "sseqid", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore"))
nrow(raw.countmatrix) # 26686 total unique transcrips calls in A irradians count matrix
# how many unique trnascript IDs of Airradians were covered by oyster blastx(s)?
# Cvirginica
length(unique(blastx_Airr_Cvirg$sseqid)) # 19598 - Airradians transcripts - in blast x Airradiads Prot database  to Cvriginica nucleotide query
(length(unique(blastx_Airr_Cvirg$sseqid)) / nrow(raw.countmatrix.REFS))* 100 # 41.08% of genes!
raw.countmatrix.REFS
# C gigas
length(unique(blastx_Airr_Cgig$sseqid)) # 19667 - Airradians transcripts - in Cgigas protein database to Airradians nucleotide query
(length(unique(blastx_Airr_Cgig$sseqid)) / nrow(raw.countmatrix.REFS))* 100 #  41.22% of genes!
nrow(raw.countmatrix.REFS)
raw.countmatrix.REFS
# by bitscore (highest is the best hit) use 'which.max'
bybitscore  <- blastx_Airr_Cvirg[,.SD[which.max(bitscore)],by=sseqid] # max bitscore
length(unique(bybitscore$sseqid)) # 19598
length(unique(bybitscore$sseqid))  == length(unique(blastx_Airr_Cvirg$sseqid))# TRUE
nrow(bybitscore %>% dplyr::filter(sseqid %in% raw.countmatrix.REFS$sseqid)) # 19351
# by evalue (lowest is the best hit) - use 'which.min'
byevalue    <- blastx_Airr_Cvirg[,.SD[which.min(evalue)],by=sseqid] # min evalue
length(unique(byevalue$sseqid)) # 19598
length(unique(byevalue$sseqid))  == length(unique(blastx_Airr_Cvirg$sseqid))# TRUE
nrow(byevalue %>% dplyr::filter(sseqid %in% raw.countmatrix.REFS$sseqid)) # 19351
byevalue
bybitscore
mean(bybitscore$bitscore)
bybitscore
bybitscore$bitscore
mean(as.numeric(bybitscore$bitscore))
sd(as.numeric(bybitscore$bitscore))/(sqrt(length(bybitscore$bitscore)))
sd(as.numeric(bybitscore$bitscore))/(sqrt(length(bybitscore$bitscore)))
bybitscore
mean(as.numeric(bybitscore$pident)) # 454.1144
sd(as.numeric(bybitscore$pident))/(sqrt(length(bybitscore$pident))) # 3.829952
# we can now do a final merge
# here was have all Airradians Transcript IDs that had the highest
# evalue hit to the Cvirginica protein database
# merged are the protein names, geneID, GOterms from the Cvirginica database
# to facilitate functional analsiss of DEGs in the Airradians data
Airr_Cvirg_master_seq_ID  <- merge(seq_ref_Airradians,Cvirg_ID.evalue,by="sseqid")
nrow(raw.countmatrix) # 49900 total unique transcrips calls in A irradians count matrix
# how many unique trnascript IDs of Airradians were covered by oyster blastx(s)?
# Cvirginica
length(unique(blastx_Airr_Cvirg$sseqid)) # 19598 - Airradians transcripts - in blast x Airradiads Prot database  to Cvriginica nucleotide query
(length(unique(blastx_Airr_Cvirg$sseqid)) / nrow(raw.countmatrix.REFS))* 100 # 41.08% of genes!
# C gigas
length(unique(blastx_Airr_Cgig$sseqid)) # 19667 - Airradians transcripts - in Cgigas protein database to Airradians nucleotide query
(length(unique(blastx_Airr_Cgig$sseqid)) / nrow(raw.countmatrix.REFS))* 100 #  41.22% of genes!
# Now lets call the C virginica transcriptome and edit to fit our needs
# seq ID reference fr C virginica data
Cvirg_seqID_editted <- as.data.frame(Cvirg_seqID[Cvirg_seqID$fullID %like% "XM_", ]  %>% # call all mRNA samples - accession always starts with XM
dplyr::mutate(TranscriptID = (str_match(fullID, ">\\s*(.*?)\\s* PREDICTED:")[,2])) %>% # remove excess ID information
dplyr::mutate(ProteinID = sub('.*Crassostrea virginica ', '',(gsub("\\s\\(LOC.*|\\sLOC111.*", "", perl=TRUE, fullID))) ) %>% # parse out the protein ID
dplyr::mutate(GeneID = paste('L', (gsub('),.*', '',(gsub(".*\\s\\(L", "", fullID)))), sep = '')) %>%  # parse out the gene ID
dplyr::select(-fullID)) # remove the full ID
nrow(Cvirg_seqID_editted) # 60201
Cvirg_seqID
#  read 'Cvirg_seqIDMASTER' output above
# file contains the Cvirgnica transcript ID, protein ID, gene ID and GO term annotation
Cvirg_seqID      <-  read.csv(file = "Data/Transcriptomics/metadata/seq_id_Cvirginica_master.csv", header =T) %>%
dplyr::rename(Cvirginica_TranscriptID = TranscriptID)
# # lern how many unique A irradians transcript IDs we have in the raw count matrix
Airr.ID         <- as.data.frame(raw.countmatrix.REFS$transcript_id) %>%
`colnames<-`("sseqid")
nrow(unique(Airr.ID)) == nrow(Airr.ID) # TRUE
nrow(Airr.ID) # 47704 - the number of transcripts TOTAL in the raw count matrix1
# merge the Cvirginica seIDs (all cvirginica IDs) with the blastx table we made contianing Airradians hits!
Cvirg_ID.evalue <- merge(Cvirg_seqID,
(byevalue   %>%
dplyr::select(sseqid, qseqid) %>%
`colnames<-`(c("Airradians_TranscriptID", "Cvirginica_TranscriptID"))), by="Cvirginica_TranscriptID",  all=T) %>%
`colnames<-`(c("blastxEval_CvirgTranscriptID",
"blastxEval_CvirgProteinID",
"blastxEval_CvirgGeneID",
"meanLength",
"blastxEval_CvirgGOterms",
"sseqid"))
# merge the Cvirginica seIDs (all cvirginica IDs) with the blastx table we made contianing Airradians hits!
Cvirg_ID.evalue <- merge(Cvirg_seqID,
# (byevalue   %>%
( bybitscore %>%
dplyr::select(sseqid, qseqid) %>%
`colnames<-`(c("Airradians_TranscriptID", "Cvirginica_TranscriptID"))), by="Cvirginica_TranscriptID",  all=T) %>%
`colnames<-`(c("blastxEval_CvirgTranscriptID",
"blastxEval_CvirgProteinID",
"blastxEval_CvirgGeneID",
"meanLength",
"blastxEval_CvirgGOterms",
"sseqid"))
# we can now do a final merge
# here was have all Airradians Transcript IDs that had the highest
# evalue hit to the Cvirginica protein database
# merged are the protein names, geneID, GOterms from the Cvirginica database
# to facilitate functional analsiss of DEGs in the Airradians data
Airr_Cvirg_master_seq_ID  <- merge(seq_ref_Airradians,Cvirg_ID.evalue,by="sseqid")
# merge2  <- merge(merge1, Cvirg_ID.bitsc,by="Airradians_TranscriptID", all=T)
nrow(Airr_Cvirg_master_seq_ID) # 34988
(nrow(Airr_Cvirg_master_seq_ID) / nrow(raw.countmatrix))*100 # 70.11 % of genes in our count matrix are represented
# merge the Cvirginica seIDs (all cvirginica IDs) with the blastx table we made contianing Airradians hits!
Cvirg_ID.evalue <- merge(Cvirg_seqID,
(byevalue   %>%
#( bybitscore %>%
dplyr::select(sseqid, qseqid) %>%
`colnames<-`(c("Airradians_TranscriptID", "Cvirginica_TranscriptID"))), by="Cvirginica_TranscriptID",  all=T) %>%
`colnames<-`(c("blastxEval_CvirgTranscriptID",
"blastxEval_CvirgProteinID",
"blastxEval_CvirgGeneID",
"meanLength",
"blastxEval_CvirgGOterms",
"sseqid"))
# we can now do a final merge
# here was have all Airradians Transcript IDs that had the highest
# evalue hit to the Cvirginica protein database
# merged are the protein names, geneID, GOterms from the Cvirginica database
# to facilitate functional analsiss of DEGs in the Airradians data
Airr_Cvirg_master_seq_ID  <- merge(seq_ref_Airradians,Cvirg_ID.evalue,by="sseqid")
# merge2  <- merge(merge1, Cvirg_ID.bitsc,by="Airradians_TranscriptID", all=T)
nrow(Airr_Cvirg_master_seq_ID) # 34988
(nrow(Airr_Cvirg_master_seq_ID) / nrow(raw.countmatrix))*100 # 70.11 % of genes in our count matrix are represented
# merge the Cvirginica seIDs (all cvirginica IDs) with the blastx table we made contianing Airradians hits!
Cvirg_ID.evalue <- merge(Cvirg_seqID,
#(byevalue   %>%
( bybitscore %>%
dplyr::select(sseqid, qseqid) %>%
`colnames<-`(c("Airradians_TranscriptID", "Cvirginica_TranscriptID"))), by="Cvirginica_TranscriptID",  all=T) %>%
`colnames<-`(c("blastxEval_CvirgTranscriptID",
"blastxEval_CvirgProteinID",
"blastxEval_CvirgGeneID",
"meanLength",
"blastxEval_CvirgGOterms",
"sseqid"))
# we can now do a final merge
# here was have all Airradians Transcript IDs that had the highest
# evalue hit to the Cvirginica protein database
# merged are the protein names, geneID, GOterms from the Cvirginica database
# to facilitate functional analsiss of DEGs in the Airradians data
Airr_Cvirg_master_seq_ID  <- merge(seq_ref_Airradians,Cvirg_ID.evalue,by="sseqid")
# merge2  <- merge(merge1, Cvirg_ID.bitsc,by="Airradians_TranscriptID", all=T)
nrow(Airr_Cvirg_master_seq_ID) # 34988
(nrow(Airr_Cvirg_master_seq_ID) / nrow(raw.countmatrix))*100 # 70.11 % of genes in our count matrix are represented
# merge the Cvirginica seIDs (all cvirginica IDs) with the blastx table we made contianing Airradians hits!
Cvirg_ID.bitscore <- merge(Cvirg_seqID,
#(byevalue   %>%
( bybitscore %>%
dplyr::select(sseqid, qseqid) %>%
`colnames<-`(c("Airradians_TranscriptID", "Cvirginica_TranscriptID"))), by="Cvirginica_TranscriptID",  all=T) %>%
`colnames<-`(c("blastxEval_CvirgTranscriptID",
"blastxEval_CvirgProteinID",
"blastxEval_CvirgGeneID",
"meanLength",
"blastxEval_CvirgGOterms",
"sseqid"))
# we can now do a final merge
# here was have all Airradians Transcript IDs that had the highest
# evalue hit to the Cvirginica protein database
# merged are the protein names, geneID, GOterms from the Cvirginica database
# to facilitate functional analsiss of DEGs in the Airradians data
Airr_Cvirg_master_seq_ID  <- merge(seq_ref_Airradians,Cvirg_ID.bitscore,by="sseqid")
# merge2  <- merge(merge1, Cvirg_ID.bitsc,by="Airradians_TranscriptID", all=T)
nrow(Airr_Cvirg_master_seq_ID) # 34988
(nrow(Airr_Cvirg_master_seq_ID) / nrow(raw.countmatrix))*100 # 70.11 % of genes in our count matrix are represented
# write csv
write.csv(Airr_Cvirg_master_seq_ID, file = "Data/Transcriptomics/metadata/seq_id_AirrCvirg_MERGED_master.csv", row.names = FALSE)
Airr_Cvirg_master_seq_ID
Cvirg_seqID
Airr.ID
raw.countmatrix.REFS
nrow(Airr.ID) # 47704 - the number of transcripts TOTAL in the raw count matrix1
nrow(Airr.ID) # 47704 - the number of transcripts TOTAL in the raw count matrix1
# merge the Cvirginica seIDs (all cvirginica IDs) with the blastx table we made contianing Airradians hits!
Cvirg_ID.bitscore <- merge(Cvirg_seqID,
#(byevalue   %>%
( bybitscore %>%
dplyr::select(sseqid, qseqid) %>%
`colnames<-`(c("Airradians_TranscriptID", "Cvirginica_TranscriptID"))), by="Cvirginica_TranscriptID",  all=T) %>%
`colnames<-`(c("blastxEval_CvirgTranscriptID",
"blastxEval_CvirgProteinID",
"blastxEval_CvirgGeneID",
"meanLength",
"blastxEval_CvirgGOterms",
"sseqid"))
# we can now do a final merge
# here was have all Airradians Transcript IDs that had the highest
# evalue hit to the Cvirginica protein database
# merged are the protein names, geneID, GOterms from the Cvirginica database
# to facilitate functional analsiss of DEGs in the Airradians data
Airr_Cvirg_master_seq_ID  <- merge(seq_ref_Airradians,Cvirg_ID.bitscore,by="sseqid")
# merge2  <- merge(merge1, Cvirg_ID.bitsc,by="Airradians_TranscriptID", all=T)
nrow(Airr_Cvirg_master_seq_ID) # 34988
