pa                  = cluster::pam(pCO2history_2.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2history_2,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history (Low v. High)",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 1,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_2.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
Heatmap(moduleTraitCor_pCO2history_2,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history (Low v. High)",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_2.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
Heatmap(moduleTraitCor_pCO2history_2,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "pCO2 histories within their matched conditions",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_2.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
Heatmap(moduleTraitCor_pCO2history_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history (Low v. High)",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 1,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
pCO2history_1.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_1, 3))
pCO2history_1.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_1, 3))
pa                  = cluster::pam(pCO2history_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2history_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history (Low v. High)",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 1,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
Heatmap(moduleTraitCor_pCO2history_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history (Low v. High)",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
table(dynamicColors_sign_1) # lets look at this table...
# (2) Cohort differences under *match*
dynamicMods_sign_2 = cutreeDynamic(dendro = geneTree_sign_2, distM = dissTOM_sign_2,
deepSplit = 1, pamRespectsDendro = FALSE,
minClusterSize = minModuleSize);
table(dynamicMods_sign_2) # view the number of genes per module
table(dynamicMods_sign_1) # view the number of genes per module
# (1) Response to challenge
dynamicColors_sign_1 = labels2colors(dynamicMods_sign_1) # add colors to module labels (previously numbers)
table(dynamicColors_sign_1) # lets look at this table...
# dynamicColors_sign_1
#     black      blue     brown     green      grey      pink       red turquoise    yellow
#       522      1654      1587       884         2       486       668      2271      1418
sizeGrWindow(8,6)
png("Output/Transcriptomics/WGCNA/challenge/Challenge_Dendrogram.png", 1000, 1000, pointsize=20)
plotDendroAndColors(geneTree_sign_1, dynamicColors_sign_1, "Dynamic Tree Cut - SIGNED",
dendroLabels = FALSE, hang = 0.03,
addGuide = TRUE, guideHang = 0.05,
main = "Gene dendrogram and module colors 'SIGNED'")
dev.off()
# (2) Cohort differences under *match*
dynamicColors_sign_2 = labels2colors(dynamicMods_sign_2) # add colors to module labels (previously numbers)
table(dynamicColors_sign_2) # lets look at this table...
# dynamicColors_sign_2
#     black      blue     brown     green      grey      pink       red turquoise    yellow
#       858      1656      1358      1114         8       699       863      1683      1253
sizeGrWindow(8,6)
png("Output/Transcriptomics/WGCNA/cohorts/Cohorts_Dendrogram.png", 1000, 1000, pointsize=20)
plotDendroAndColors(geneTree_sign_2, dynamicColors_sign_2, "Dynamic Tree Cut - SIGNED",
dendroLabels = FALSE, hang = 0.03,
addGuide = TRUE, guideHang = 0.05,
main = "Gene dendrogram and module colors 'SIGNED'")
dev.off()
# (1) Response to challenge
MEList_1 = moduleEigengenes(dds_1filt_master, colors = dynamicColors_sign_1)
MEs_1    = MEList_1$eigengenes # you can view MEs, condenses gene counts down to a single number for each sample representive of that
MEDiss_1 = 1-cor(MEs_1); # Calculate dissimilarity of module eigengenes
METree_1 = hclust(as.dist(MEDiss_1), method = "average") # Cluster module eigengenes
sizeGrWindow(7, 6)
png("Output/Transcriptomics/WGCNA/challenge/Challenge_ClusterEigengenes.png", 1000, 1000, pointsize=20)
plot(METree_1, main = "Clustering of module eigengenes - SIGNED (dissimilarity calc = MEDiss = 1-cor(MEs))",
xlab = "", sub = "")
dev.off()
# (2) Cohort differences under *match*
MEList_2 = moduleEigengenes(dds_2filt_master, colors = dynamicColors_sign_2)
MEs_2    = MEList_2$eigengenes # you can view MEs, condenses gene counts down to a single number for each sample representive of that
MEDiss_2 = 1-cor(MEs_2); # Calculate dissimilarity of module eigengenes
METree_2 = hclust(as.dist(MEDiss_2), method = "average") # Cluster module eigengenes
sizeGrWindow(7, 6)
png("Output/Transcriptomics/WGCNA/cohorts/Cohorts_ClusterEigengenes.png", 1000, 1000, pointsize=20)
plot(METree_2, main = "Clustering of module eigengenes - SIGNED (dissimilarity calc = MEDiss = 1-cor(MEs))",
xlab = "", sub = "")
dev.off()
plot(METree_2, main = "Clustering of module eigengenes - SIGNED (dissimilarity calc = MEDiss = 1-cor(MEs))",
xlab = "", sub = "")
plot(METree_1, main = "Clustering of module eigengenes - SIGNED (dissimilarity calc = MEDiss = 1-cor(MEs))",
xlab = "", sub = "")
colorOrder = c("grey", standardColors(50));
# (1) Response to challenge
moduleColors_1 = dynamicColors_sign_1
moduleLabels_1 = match(moduleColors_1, colorOrder)-1;
save(MEs_1, dds_1filt_master, moduleLabels_1, moduleColors_1,  # Save module colors and labels for use in subsequent parts
file = "Output/Transcriptomics/WGCNA/challenge/Challenge-networkConstruction-stepByStep.RData")
write.csv(MEs_1, file = "Output/Transcriptomics/WGCNA/challenge/Challenge_ModulEigengenes.csv") # save the module eigengenes
# (2) Cohort differences under *match*
moduleColors_2 = dynamicColors_sign_2
moduleLabels_2 = match(moduleColors_2, colorOrder)-1;
save(MEs_2, dds_2filt_master, moduleLabels_2, moduleColors_2,  # Save module colors and labels for use in subsequent parts
file = "Output/Transcriptomics/WGCNA/cohorts/Cohorts-networkConstruction-stepByStep.RData")
write.csv(MEs_2, file = "Output/Transcriptomics/WGCNA/cohorts/Cohorts_ModulEigengenes.csv") # save the module eigengenes
# (1) Response to challenge
pCO2history_1.asnum             <- data.frame(lapply(exp_metadata_1_pCO2history,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_pCO2history))
moduleTraitCor_pCO2history_1    <- cor(MEs_1, exp_metadata_1_pCO2history, use = "p");
moduleTraitPvalue_pCO2history_1 <- corPvalueStudent(moduleTraitCor_pCO2history_1, nSamples);
pCO2exposure_1.asnum             <- data.frame(lapply(exp_metadata_1_pCO2exposure,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_pCO2exposure))
moduleTraitCor_pCO2exposure_1    <- cor(MEs_1, exp_metadata_1_pCO2exposure, use = "p");
moduleTraitPvalue_pCO2exposure_1 <- corPvalueStudent(moduleTraitCor_pCO2exposure_1, nSamples);
AllpCO2_1.asnum             <- data.frame(lapply(exp_metadata_1_AllpCO2,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_AllpCO2))
moduleTraitCor_AllpCO2_1    <- cor(MEs_1, exp_metadata_1_AllpCO2, use = "p");
moduleTraitPvalue_AllpCO2_1 <- corPvalueStudent(moduleTraitCor_AllpCO2_1, nSamples);
# (2) Cohort differences under *match*
pCO2history_2.asnum             <- data.frame(lapply(exp_metadata_2_pCO2history,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_2_pCO2history))
moduleTraitCor_pCO2history_2    <- cor(MEs_2, exp_metadata_2_pCO2history, use = "p");
moduleTraitPvalue_pCO2history_2 <- corPvalueStudent(moduleTraitCor_pCO2history_2, nSamples);
pCO2history_1.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_1, 3))
pCO2history_1.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_1, 3))
pa                  = cluster::pam(pCO2history_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2history_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history (Low v. High)",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 1,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
pCO2history_1.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_1, 3))
pCO2history_1.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_1, 3))
pa                  = cluster::pam(pCO2history_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
pdf("Output/Transcriptomics/WGCNA/challenge/Challenge_pCO2history_Heatmap.pdf", width=5, height=6)
Heatmap(moduleTraitCor_pCO2history_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history (Low v. High)",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 1,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
dev.off()
pCO2exposure_1.text <-  as.matrix(signif(moduleTraitPvalue_pCO2exposure_1, 3))
pCO2exposure_1.COR  <-  as.matrix(signif(moduleTraitCor_pCO2exposure_1, 3))
pa                  = cluster::pam(pCO2exposure_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2exposure_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2exposure_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
pdf("Output/Transcriptomics/WGCNA/challenge/Challenge_allpCO2_Heatmap.pdf", width=5, height=6)
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 3,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
dev.off()
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pdf("Output/Transcriptomics/WGCNA/challenge/Challenge_pCO2exposure_Heatmap.pdf", width=5, height=6)
Heatmap(moduleTraitCor_pCO2exposure_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2exposure_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
dev.off()
AllpCO2_1.text <-  as.matrix(signif(moduleTraitPvalue_AllpCO2_1, 3))
AllpCO2_1.COR  <-  as.matrix(signif(moduleTraitCor_AllpCO2_1, 3))
pa                  = cluster::pam(AllpCO2_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 3,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pdf("Output/Transcriptomics/WGCNA/challenge/Challenge_allpCO2_Heatmap.pdf", width=5, height=6)
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 3,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
dev.off()
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pa                  = cluster::pam(pCO2history_2.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2history_2,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "pCO2 histories within their matched conditions",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_2.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 3,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
AllpCO2_1.text <-  as.matrix(signif(moduleTraitPvalue_AllpCO2_1, 3))
AllpCO2_1.COR  <-  as.matrix(signif(moduleTraitCor_AllpCO2_1, 3))
pa                  = cluster::pam(AllpCO2_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 3,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
MEs_1
# (2) Cohort differences under *match*
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pa                  = cluster::pam(pCO2history_2.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
pdf("Output/Transcriptomics/WGCNA/cohorts/Cohorts_pCO2history_Heatmap.pdf", width=5, height=6)
Heatmap(moduleTraitCor_pCO2history_2,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "pCO2 histories within their matched conditions",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_2.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
dev.off()
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
AllpCO2_1.text <-  as.matrix(signif(moduleTraitPvalue_AllpCO2_1, 3))
AllpCO2_1.COR  <-  as.matrix(signif(moduleTraitCor_AllpCO2_1, 3))
pa                  = cluster::pam(AllpCO2_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
pdf("Output/Transcriptomics/WGCNA/challenge/Challenge_allpCO2_Heatmap.pdf", width=5, height=6)
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
dev.off()
