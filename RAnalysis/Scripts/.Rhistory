# Run_date 20230828, y = 0.0385x - 0.0114
# Run_date 20230829, y = 0.0994x - 0.0249
# * (5) Calculate Total protein per sample; subtract out background + correct for standard curve +  average
# Background correction, Run_date 20230828, blank to correct by is 0.04675
# Background correction, Run_date 20230829, blank to correct by is 0.04680
# Standard curve, Run_date 20230828, x = ((Abs_570nm + 0.0114)/0.0385) - NOTE, below we have OD and are solving for x (ATP nmol)
# Standard curve, Run_date 20230829, x = ((Abs_570nm + 0.0249)/0.0994) - NOTE, below we have OD and are solving for x (ATP nmol)
# ATP concentration = (B/V * D) * DDF
# * B = the concentration in nmol ATP from the standard curve
# * V = the volume added to each well
# * D = dilution volume if sample was diluted to fit the curve (d/n apply here)
# * DDF = the deproteinization dilution factor LOOK THIS OVER WE ADDED 25 ul TO THE SAMPLE
V = 0.0005 # 50 in ul; as liters = 0.0005
# side note: ATP molecular weight = 507.18 g/mol
# IMPORTANT! we used 50 ul of the standards and 50 ul of the unknowns (samples)
# therefore we can interpret the unknown direct to the the standard curve without having
# to account for addition factors in order to infer nmol concentration
ATP_final <- raw_ATP_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0(Run_date,'_', Type, Scallop_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_570nm_cor = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (Abs_570nm-0.04675), # for plate 1
Run_date == 20230829 ~ (Abs_570nm-0.04680) ) ) %>% # for plate 2
dplyr::mutate(ATP_nmol = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ ((Abs_570nm + 0.0114)/0.0385), # for plate 1 - nmol to umol by div 1000
Run_date == 20230829 ~ ((Abs_570nm + 0.0249)/0.0994) ) )  %>% # for plate 2 - nmol to umol by div 1000
dplyr::group_by(Day,pCO2_history,pCO2_exposure,
Unique_ID, Run_date, Scallop_ID) %>% # group by to get the means
dplyr::summarise(mean_ATP_nmol = mean(ATP_nmol),
sd_ATP_nmol   = sd(ATP_nmol),
n = n(),
se_ATP_nmol   = sd_ATP_nmol / sqrt(n))
# write csv
write.csv(ATP_final, file = "Data/Colorimetric_assays/ATP/Calc_Master_ATP.csv")
print(ATP_stand_plots)
ATP_final <- read.csv(file = "Data/Colorimetric_assays/ATP/Calc_Master_ATP.csv", head = T)
ATP_final_prepmerge    <- ATP_final[,c(2:4,7,8)]
TotalProtein_final <- read.csv(file = "Data/Colorimetric_assays/BCA_ATPcorrection/Calc_Master_BCA_ATPcorrection.csv", head = T)
TotalProtein_prepmerge <- TotalProtein_final[,c(2:4,7,8)]
# IMPORTANT! the ATP assay used 50 ul sample whereas BCA used 25 ul of sample
# therefore to relate ATP to total protein we must divide ATP by 2
MERGED_DF <- merge(ATP_final_prepmerge,
TotalProtein_prepmerge,
all=T)  %>% # looks like we have 3 absent values for total protein..
dplyr::mutate(ATP_nmol_ug_protein = (mean_ATP_nmol/2)/mean_TotalProtein_ug) # 50 ul for ATP well and 25 ul for BCA well
# View(MERGED_DF) # view the file for any NAs
# IMPORTANT! three individuals did not have enough supernatant to run total protein, listed below as NAs
# Day 1 ID 24 (low history x severe exposure)
# Day 1 ID 35 (moderate history x low exposure)
# Day 14 ID 67 (severe history x low exposure)
MERGED_DF %>% dplyr::filter(ATP_nmol_ug_protein %in% NA)
# lets see the mean_TotalProtein_ug for these treatments
aggregate(MERGED_DF$mean_TotalProtein_ug, list(MERGED_DF$Day,
MERGED_DF$pCO2_history,
MERGED_DF$pCO2_exposure
), FUN=mean, na.rm=TRUE)
# Day 1	   low	 history  severe exposure == 84.99992		(for ID 24)
# Day 1	moderate history	low	   exposure == 47.91459 (for ID 35)
# Day 14 severe	 history  low	   exposure == 40.38476  (for ID 67)
MASTER_DF <- merge(ATP_final_prepmerge,
TotalProtein_prepmerge,
all=T)  %>% # looks like we have 3 absent values for total protein..
dplyr::mutate(mean_TotalProtein_ug =
case_when(
Scallop_ID %in% 24 ~ 84.99992, # manually based on treatment averages, no sample for protein
Scallop_ID %in% 35 ~ 47.91459, # manually based on treatment averages, no sample for protein
Scallop_ID %in% 67 ~ 40.38476, # manually based on treatment averages, no sample for protein
TRUE ~ mean_TotalProtein_ug),
mean_TotalProtein_ng = mean_TotalProtein_ug/1000,
ATP_nmol_ng_protein = (mean_ATP_nmol/2)/mean_TotalProtein_ng)
View(MASTER_DF)
# write csv
write.csv(MASTER_DF, file = "Data/Colorimetric_assays/ATP_Master.csv")
# write csv
write.csv(MASTER_DF, file = "Output/Colorimetric_assays/ATP/ATP_Master.csv")
# write csv
write.csv(ATP_final, file = "Output/Colorimetric_assays/ATP/Calc_Master_ATP.csv")
pdf(paste("Output/Colorimetric_assays/BCA_ATPcorrection/Standard_Curve_BCA_ATPcorrection.pdf", sep =''),
width=10,
height=7)
print(ggarrange(BCA_stand_plots_quadratic,BCA_stand_plots_linear))
dev.off()
# write csv
write.csv(TotalProtein_final, file = "Output/Colorimetric_assays/BCA_ATPcorrection/Calc_Master_BCA_ATPcorrection.csv")
pdf(paste("Output/Colorimetric_assays/ATP/Standard_Curve_ATP.pdf", sep =''),
width=10,
height=7)
print(ATP_stand_plots)
dev.off()
# write csv
write.csv(ATP_final, file = "Output/Colorimetric_assays/ATP/Calc_Master_ATP.csv")
ATP_final <- read.csv(file = "Output/Colorimetric_assays/ATP/Calc_Master_ATP.csv", head = T)
ATP_final_prepmerge    <- ATP_final[,c(2:4,7,8)]
TotalProtein_final <- read.csv(file = "Output/Colorimetric_assays/BCA_ATPcorrection/Calc_Master_BCA_ATPcorrection.csv", head = T)
TotalProtein_prepmerge <- TotalProtein_final[,c(2:4,7,8)]
# write csv
write.csv(MASTER_DF, file = "Output/Colorimetric_assays/ATP/ATP_Master.csv")
MASTER_DF <- read.csv(file = "Output/Colorimetric_assays/ATP_Master.csv", head = T)
MASTER_DF <- read.csv(file = "Output/Colorimetric_assays/ATP/ATP_Master.csv", head = T)
ggplot(MASTER_DF, aes(mean_ATP_nmol,mean_TotalProtein_ug)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ x, size = 1) +
theme_bw() +
facet_wrap(~pCO2_history)
MASTER_DF <- read.csv(file = "Output/Colorimetric_assays/ATP/ATP_Master.csv", head = T)
Day1_ATP_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 1) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_ATP_nmol = as.numeric(mean_ATP_nmol)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_ATP_nmol')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(mean_ATP_nmol), # mean
ATP_sd = sd(mean_ATP_nmol), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP, Day 1") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) + # true 0 origin
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2.5)) + # true 0 origin
labs(y= "ATP (nmol)", x = "pCO2 Exposure")
Day14_ATP_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 14) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_ATP_nmol = as.numeric(mean_ATP_nmol)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_ATP_nmol')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(mean_ATP_nmol), # mean
ATP_sd = sd(mean_ATP_nmol), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP, Day 14") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) + # true 0 origin
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2.5)) + # true 0 origin
labs(y= "ATP (nmol ng protein-1)", x = "pCO2 Exposure")
pdf("Output/Colorimetric_assays/ATP/ATP_RxnNorm.pdf", width = 7, height = 5)
ggarrange(Day1_ATP_RxnNorm,Day14_ATP_RxnNorm, ncol=2)
dev.off()
MASTER_DF <- read.csv(file = "Output/Colorimetric_assays/ATP/ATP_Master.csv", head = T)
Day1_ATP_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 1) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_ATP_nmol = as.numeric(mean_ATP_nmol)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_ATP_nmol')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(mean_ATP_nmol), # mean
ATP_sd = sd(mean_ATP_nmol), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP (not corrected) Day 1") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) + # true 0 origin
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2.5)) + # true 0 origin
labs(y= "ATP (nmol)", x = "pCO2 Exposure")
# Day1_ATP_RxnNorm # view the plot
Day14_ATP_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 14) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_ATP_nmol = as.numeric(mean_ATP_nmol)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_ATP_nmol')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(mean_ATP_nmol), # mean
ATP_sd = sd(mean_ATP_nmol), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP (not corrected) Day 14") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) + # true 0 origin
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2.5)) + # true 0 origin
labs(y= "ATP (nmol)", x = "pCO2 Exposure")
# Day14_ATP_RxnNorm # view the plot
# save plots
pdf("Output/Colorimetric_assays/ATP/ATP_RxnNorm.pdf", width = 7, height = 5)
ggarrange(Day1_ATP_RxnNorm,Day14_ATP_RxnNorm, ncol=2)
dev.off()
pdf("Output/Colorimetric_assays/ATP/ATP_uncorrected_RxnNorm.pdf", width = 7, height = 5)
ggarrange(Day1_ATP_RxnNorm,Day14_ATP_RxnNorm, ncol=2)
dev.off()
MASTER_DF <- read.csv(file = "Data/Colorimetric_assays/ATP_Master.csv", head = T)
MASTER_DF <- read.csv(file = "Output/Colorimetric_assays/ATP/ATP_Master.csv", head = T)
Day1_ATP_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 1) %>% # filter for desired date of rhte experiment
dplyr::mutate(ATP_nmol_ng_protein = as.numeric(ATP_nmol_ng_protein)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','ATP_nmol_ng_protein')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(ATP_nmol_ng_protein), # mean
ATP_sd = sd(ATP_nmol_ng_protein), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP, Day 1") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 50)) + # true 0 origin
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2.5)) + # true 0 origin
labs(y= "ATP (nmol ng protein-1)", x = "pCO2 Exposure")
Day14_ATP_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 14) %>% # filter for desired date of rhte experiment
dplyr::mutate(ATP_nmol_ng_protein = as.numeric(ATP_nmol_ng_protein)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','ATP_nmol_ng_protein')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(ATP_nmol_ng_protein), # mean
ATP_sd = sd(ATP_nmol_ng_protein), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP, Day 14") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 50)) + # true 0 origin
# scale_y_continuous(expand = c(0, 0), limits = c(0, 2.5)) + # true 0 origin
labs(y= "ATP (nmol ng protein-1)", x = "pCO2 Exposure")
ggarrange(Day1_ATP_RxnNorm,Day14_ATP_RxnNorm, ncol=2)
pdf("Output/Colorimetric_assays/ATP/ATP_proteincorrect_RxnNorm.pdf", width = 7, height = 5)
ggarrange(Day1_ATP_RxnNorm,Day14_ATP_RxnNorm, ncol=2)
dev.off()
MASTER_DF <- read.csv(file = "Output/Colorimetric_assays/ATP/ATP_Master.csv", head = T)
Day1_TotalProtein_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 1) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_TotalProtein_ng = as.numeric(mean_TotalProtein_ng)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_TotalProtein_ng')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
TP_mean = mean(mean_TotalProtein_ng), # mean
TP_sd = sd(mean_TotalProtein_ng), # sd
TP_n = n(), # count
TP_se = TP_sd / sqrt(TP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=TP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(TP_mean)-(TP_se), # new means and se by treatment
ymax=(TP_mean)+(TP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 3)) + # true 0 origin
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.25)) + # true 0 origin
ggtitle("Total Protein") +
labs(y= "Total Protie (ng mL)", x = "pCO2 Exposure")
Day14_TotalProtein_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 14) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_TotalProtein_ng = as.numeric(mean_TotalProtein_ng)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_TotalProtein_ng')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
TP_mean = mean(mean_TotalProtein_ng), # mean
TP_sd = sd(mean_TotalProtein_ng), # sd
TP_n = n(), # count
TP_se = TP_sd / sqrt(TP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=TP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(TP_mean)-(TP_se), # new means and se by treatment
ymax=(TP_mean)+(TP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 3)) + # true 0 origin
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.25)) + # true 0 origin
ggtitle("Total Protein") +
labs(y= "Total Protien (ng mL)", x = "pCO2 Exposure")
Day1_TotalProtein_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 1) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_TotalProtein_ng = as.numeric(mean_TotalProtein_ng)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_TotalProtein_ng')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
TP_mean = mean(mean_TotalProtein_ng), # mean
TP_sd = sd(mean_TotalProtein_ng), # sd
TP_n = n(), # count
TP_se = TP_sd / sqrt(TP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=TP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(TP_mean)-(TP_se), # new means and se by treatment
ymax=(TP_mean)+(TP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 3)) + # true 0 origin
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.25)) + # true 0 origin
ggtitle("Total Protein, Day 1") +
labs(y= "Total Protie (ng mL)", x = "pCO2 Exposure")
Day14_TotalProtein_RxnNorm
Day14_TotalProtein_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 14) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_TotalProtein_ng = as.numeric(mean_TotalProtein_ng)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_TotalProtein_ng')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
TP_mean = mean(mean_TotalProtein_ng), # mean
TP_sd = sd(mean_TotalProtein_ng), # sd
TP_n = n(), # count
TP_se = TP_sd / sqrt(TP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=TP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(TP_mean)-(TP_se), # new means and se by treatment
ymax=(TP_mean)+(TP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 3)) + # true 0 origin
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.25)) + # true 0 origin
ggtitle("Total Protein, Day 14") +
labs(y= "Total Protien (ng mL)", x = "pCO2 Exposure")
Day14_TotalProtein_RxnNorm
Day1_TotalProtein_RxnNorm
# save plots
pdf("Output/Colorimetric_assays/BCA_ATPcorrection/TotalProtein_RxnNorm.pdf", width = 7, height = 5)
ggarrange(Day1_TotalProtein_RxnNorm,Day14_TotalProtein_RxnNorm, ncol=2)
dev.off()
MASTER_DF <- read.csv(file = "Output/Colorimetric_assays/ATP/ATP_Master.csv", head = T)
Day1_TotalProtein_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 1) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_TotalProtein_ng = as.numeric(mean_TotalProtein_ng)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_TotalProtein_ng')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
TP_mean = mean(mean_TotalProtein_ng), # mean
TP_sd = sd(mean_TotalProtein_ng), # sd
TP_n = n(), # count
TP_se = TP_sd / sqrt(TP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=TP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(TP_mean)-(TP_se), # new means and se by treatment
ymax=(TP_mean)+(TP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 3)) + # true 0 origin
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.15)) + # true 0 origin
ggtitle("Total Protein, Day 1") +
labs(y= "Total Protie (ng mL)", x = "pCO2 Exposure")
# Day1_TotalProtein_RxnNorm # view the plot
Day14_TotalProtein_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 14) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_TotalProtein_ng = as.numeric(mean_TotalProtein_ng)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_TotalProtein_ng')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
TP_mean = mean(mean_TotalProtein_ng), # mean
TP_sd = sd(mean_TotalProtein_ng), # sd
TP_n = n(), # count
TP_se = TP_sd / sqrt(TP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=TP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(TP_mean)-(TP_se), # new means and se by treatment
ymax=(TP_mean)+(TP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 3)) + # true 0 origin
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.15)) + # true 0 origin
ggtitle("Total Protein, Day 14") +
labs(y= "Total Protien (ng mL)", x = "pCO2 Exposure")
# Day14_TotalProtein_RxnNorm # view the plot
# save plots
pdf("Output/Colorimetric_assays/BCA_ATPcorrection/TotalProtein_RxnNorm.pdf", width = 7, height = 5)
ggarrange(Day1_TotalProtein_RxnNorm,Day14_TotalProtein_RxnNorm, ncol=2)
dev.off()
