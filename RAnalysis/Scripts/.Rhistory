geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(PercLive_mean)-(PercLive_se),
ymax=(PercLive_mean)+(PercLive_se)),
width=.2,position=position_dodge(.1)) +
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggtitle("Percent alive cells - 14 days") +
labs(y= "Percent alive cells (%)", x = "pCO2 Exposure") +
facet_wrap(~pCO2_history)
Day14_PropLive_RxnNorm
Day14_PropLive_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230516) %>% # filter for desired date of rhte experiment
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_alive')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
PercLive_mean = mean(SYBR_PI_prop_alive_ADJ), # mean
PercLive_sd = sd(SYBR_PI_prop_alive_ADJ), # sd
n = n(), # count
PercLive_se = PercLive_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=PercLive_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(PercLive_mean)-(PercLive_se),
ymax=(PercLive_mean)+(PercLive_se)),
width=.2,position=position_dodge(.1)) +
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
ggtitle("Percent alive cells - 14 days") +
labs(y= "Percent alive cells (%)", x = "pCO2 Exposure") +
facet_wrap(~pCO2_history)
Day14_PropLive_RxnNorm
Day14_PropLive_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230516) %>% # filter for desired date of rhte experiment
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_alive')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
PercLive_mean = mean(SYBR_PI_prop_alive_ADJ), # mean
PercLive_sd = sd(SYBR_PI_prop_alive_ADJ), # sd
n = n(), # count
PercLive_se = PercLive_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=PercLive_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(PercLive_mean)-(PercLive_se),
ymax=(PercLive_mean)+(PercLive_se)),
width=.2,position=position_dodge(.1)) +
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
ggtitle("Percent alive cells - 14 days") +
labs(y= "Percent alive cells (%)", x = "pCO2 Exposure")# +
#facet_wrap(~pCO2_history)
Day14_PropLive_RxnNorm
Day14_PropLive_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230516) %>% # filter for desired date of rhte experiment
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_alive')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
PercLive_mean = mean(SYBR_PI_prop_alive_ADJ), # mean
PercLive_sd = sd(SYBR_PI_prop_alive_ADJ), # sd
n = n(), # count
PercLive_se = PercLive_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=PercLive_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(PercLive_mean)-(PercLive_se),
ymax=(PercLive_mean)+(PercLive_se)),
width=.2,position=position_dodge(.4)) +
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
ggtitle("Percent alive cells - 14 days") +
labs(y= "Percent alive cells (%)", x = "pCO2 Exposure")# +
#facet_wrap(~pCO2_history)
Day14_PropLive_RxnNorm
Day14_PropLive_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230516) %>% # filter for desired date of rhte experiment
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_alive')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
PercLive_mean = mean(SYBR_PI_prop_alive_ADJ), # mean
PercLive_sd = sd(SYBR_PI_prop_alive_ADJ), # sd
n = n(), # count
PercLive_se = PercLive_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=PercLive_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(PercLive_mean)-(PercLive_se),
ymax=(PercLive_mean)+(PercLive_se)),
width=.2,position=position_dodge(.4)) +
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
ggtitle("Percent alive cells - 14 days") +
labs(y= "Percent alive cells (%)", x = "pCO2 Exposure") +
facet_wrap(~pCO2_history)
Day14_PropLive_RxnNorm
library(betareg) # runs a beta regression model suotable for proportion (percent data) between 0 and 1 (our live and dead cells data)
library(lmtest) # to receive p value from betareg model
library(FSA) # for the Dun test post hoc for SRH non-parametric 2 way anova]
library(emmeans)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(car)
library(lmerTest)
library(tidyr)
library(reshape2)
library(ggpubr)
library(nlme)
library(rcompanion) # to run the Schrier -Ray-Hare non parametric 2 way
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_Reexposure_OA/RAnalysis") # sets the working directory for the entire R markdown file - no need to reload the wd
getwd()
# read data
data  <- read.csv(file="../Data/FlowCytometry/Hemolymph_data_raw.csv", header = TRUE) %>%
dplyr::mutate(Scallop_ID = as.character(Scallop_ID))
# filter out data points based on visual diagnositcs of flow cytometry data
# criterion being, but not limited to, uninterpretable clouds showing no biological importance
# these data were (in most cases) specific to a probe and not the whole individual across all measurements
data_filt <- data %>%
# PERCENT/PROPORTION LIVE AND DEAD CELLS
# first denote NAs for SYBR + PI = 51 and 59 and 60
dplyr::mutate(SYBR_PI_count_alive=
ifelse(Scallop_ID %in% c('20', '51', '59', '56', '60', '70', '87', '89'),
NA, as.numeric(sub(",", "", SYBR_PI_count_alive)))) %>% # for #s insert Na, else insert oG data
dplyr::mutate(SYBR_PI_count_dead=
ifelse(Scallop_ID %in% c('20', '51', '59', '56', '60', '70', '87', '89'),
NA, as.numeric(sub(",", "", SYBR_PI_count_dead)))) %>% # for #s insert Na, else insert oG data
# MITOCHONDRIAL SUPEROXIDE DISMUTASE
# NA for mitosox greend data day 1: = #s 24 and 74
# NA for mitosox green data day 14: 50 (no events), 27 (no/minimal events), 56 (cont. likely), 87 (strange density), 90 (cut off, but okay)
dplyr::mutate(MitoSoxGreen_Mean_FL1=
ifelse(Scallop_ID %in% c('24', '74', '27','50','56','87','90'),
NA, as.numeric(sub(",", "", MitoSoxGreen_Mean_FL1))))  %>% # for #s insert Na, else insert oG data
# MITOCHONDRIAL MEMBRANE POTENTIAL DATA
# NA for JC-10 = 12,13, 51, 74
dplyr::mutate(JC10_FL1_monomer=
ifelse(Scallop_ID %in% c('12', '13', '51', '74'), NA, JC10_FL1_monomer)) %>% # for #s insert Na, else insert oG data insert oG data
dplyr::mutate(JC10_FL2_Jaggregate=
ifelse(Scallop_ID %in% c('12', '13', '51', '74'), NA, JC10_FL2_Jaggregate)) %>% # for #s insert Na, else insert oG data insert oG data
# calculate the FL2:FL1 ratio - this is our core data for this metric!
dplyr::mutate(JC10_FL2_FL1_Ratio = ( (as.numeric(sub(",", "", JC10_FL2_Jaggregate))) /
(as.numeric(sub(",", "", JC10_FL1_monomer))) ))  %>%
# ADJUSTED PERCENT DATA - CHANGE TO PROPORTION 0-1
# the current precent alive and dead is proportion to ALL events of the cytogram - including those NOT dyed by SYBR and PI
# here we do an ADJ percent calc through sum of ONLY the live and dead events for a new 100
# second, adjusted 100% for ONLY counts live and dead
dplyr::mutate(SYBR_PI_prop_alive_ADJ = (SYBR_PI_count_alive/(SYBR_PI_count_alive+SYBR_PI_count_dead))) %>%
dplyr::mutate(SYBR_PI_prop_dead_ADJ = (SYBR_PI_count_dead/(SYBR_PI_count_alive+SYBR_PI_count_dead)))
# FILTER DATA FOR THE DAY 1 AND DAY 14 DATA
Day1_datafilt  <- data_filt %>% dplyr::filter(Date %in% 20230502)
Day14_datafilt <- data_filt %>% dplyr::filter(Date %in% 20230516)
# View(data)
# View(data_filt)
Day1_datafilt
Day1_PropLive_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230502) %>% # filter for desired date of rhte experiment
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_alive')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
PercLive_mean = mean(SYBR_PI_prop_alive_ADJ), # mean
PercLive_sd = sd(SYBR_PI_prop_alive_ADJ), # sd
n = n(), # count
PercLive_se = PercLive_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=PercLive_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(PercLive_mean)-(PercLive_se),
ymax=(PercLive_mean)+(PercLive_se)),
width=.2,position=position_dodge(.4)) +
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggtitle("Percent alive cells - 24 hours") +
labs(y= "Percent alive cells (%)", x = "pCO2 Exposure") # +
Day1_PropDead_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230502) %>% # filter for desired date of rhte experiment
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_dead')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
PercDead_mean = mean(SYBR_PI_prop_dead_ADJ), # mean
PercDead_sd = sd(SYBR_PI_prop_dead_ADJ), # sd
n = n(), # count
PercDead_se = PercDead_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=PercDead_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(PercDead_mean)-(PercDead_se),
ymax=(PercDead_mean)+(PercDead_se)),
width=.2,position=position_dodge(.4)) +
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggtitle("Percent dead cells - 24 hours") +
labs(y= "Percent dead cells (%)", x = "pCO2 Exposure") #+
Day14_PropLive_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230516) %>% # filter for desired date of rhte experiment
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_alive')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
PercLive_mean = mean(SYBR_PI_prop_alive_ADJ), # mean
PercLive_sd = sd(SYBR_PI_prop_alive_ADJ), # sd
n = n(), # count
PercLive_se = PercLive_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=PercLive_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(PercLive_mean)-(PercLive_se),
ymax=(PercLive_mean)+(PercLive_se)),
width=.2,position=position_dodge(.4)) +
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
ggtitle("Percent alive cells - 14 days") +
labs(y= "Percent alive cells (%)", x = "pCO2 Exposure") #+
Day14_PropDead_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230516) %>% # filter for desired date of rhte experiment
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_dead')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
PercDead_mean = mean(SYBR_PI_prop_dead_ADJ), # mean
PercDead_sd = sd(SYBR_PI_prop_dead_ADJ), # sd
n = n(), # count
PercDead_se = PercDead_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=PercDead_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(PercDead_mean)-(PercDead_se),
ymax=(PercDead_mean)+(PercDead_se)),
width=.2,position=position_dodge(.4)) +
theme_classic() +
ggtitle("Percent dead cells - 14 days") +
labs(y= "Percent dead cells (%)", x = "pCO2 Exposure")# +
ggarrange(Day14_PropLive_RxnNorm, Day14_PropDead_RxnNorm)
ggarrange(Day1_PropLive_RxnNorm, Day1_PropDead_RxnNorm)
Day1_MitoROS_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230502) %>% # filter for desired date of rhte experiment
dplyr::mutate(MitoSoxGreen_Mean_FL1 = as.numeric(MitoSoxGreen_Mean_FL1)) %>%
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_alive')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
MitROS_mean = mean(MitoSoxGreen_Mean_FL1), # mean
MitROS_sd = sd(MitoSoxGreen_Mean_FL1), # sd
n = n(), # count
MitROS_se = MitROS_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=MitROS_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(MitROS_mean)-(MitROS_se),
ymax=(MitROS_mean)+(MitROS_se)),
width=0,position=position_dodge(.4)) + # width dtermines the length of the end ticks
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggtitle("Mitochondrial ROS - 24 hours") +
labs(y= "A.U.", x = "pCO2 Exposure") #+
Day14_MitoROS_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230516) %>% # filter for desired date of rhte experiment
dplyr::mutate(MitoSoxGreen_Mean_FL1 = as.numeric(sub(",", "", MitoSoxGreen_Mean_FL1))) %>% # the % sign is included making this a character, omit the percent and make numeric!
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_alive')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
MitROS_mean = mean(MitoSoxGreen_Mean_FL1), # mean
MitROS_sd = sd(MitoSoxGreen_Mean_FL1), # sd
n = n(), # count
MitROS_se = MitROS_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=MitROS_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(MitROS_mean)-(MitROS_se),
ymax=(MitROS_mean)+(MitROS_se)),
width=0,position=position_dodge(.4)) + # width dtermines the length of the end ticks
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggtitle("Mitochondrial ROS - 14 days") +
labs(y= "A.U.", x = "pCO2 Exposure")# +
ggarrange(Day1_MitoROS_RxnNorm, Day14_MitoROS_RxnNorm, nrow=2)
Day1_MitoMemPot_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230502) %>% # filter for desired date of rhte experiment
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_alive')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
JC10_mean = mean(JC10_FL2_FL1_Ratio), # mean
JC10_sd = sd(JC10_FL2_FL1_Ratio), # sd
n = n(), # count
JC10_se = JC10_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=JC10_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(JC10_mean)-(JC10_se),
ymax=(JC10_mean)+(JC10_se)),
width=.2,position=position_dodge(.4)) +
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggtitle("Mitochondrial membrane potential - 24 hours") +
labs(y= "A.U.", x = "pCO2 Exposure")# +
Day14_MitoMemPot_RxnNorm <- data_filt %>% # data %>%
# edit data to suit out needs
dplyr::filter(Date %in% 20230516) %>% # filter for desired date of rhte experiment
na.omit() %>%  # omitts sample ID 64 that did not have sufficient hemolymph for this assay
#dplyr::select(c('pCO2_exposure', 'pCO2_history','SYBR_PI_count_alive')) %>%  # select desired columns
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to aquire the mean and SE for plotting
JC10_mean = mean(JC10_FL2_FL1_Ratio), # mean
JC10_sd = sd(JC10_FL2_FL1_Ratio), # sd
n = n(), # count
JC10_se = JC10_sd / sqrt(n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=JC10_mean, group=pCO2_history)) +
geom_line(aes(group = factor(pCO2_history), linetype = pCO2_history), size = 0.5, position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4,position=position_dodge(.4)) +
scale_shape_manual(values=c(16, 17, 4)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c('white','white', 'black')) + # fill cicle white, triangle white, and jsut black for the X
geom_errorbar(aes(ymin=(JC10_mean)-(JC10_se),
ymax=(JC10_mean)+(JC10_se)),
width=.2,position=position_dodge(.4)) +
# geom_jitter() +
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
ggtitle("Mitochondrial membrane potential - 14 days") +
labs(y= "A.U.", x = "pCO2 Exposure") # +
# all 24 hours
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis/Output/FlowCytometry/Day1_All_RxnNorm.pdf"), height = 12)
ggarrange(Day1_PropLive_RxnNorm, Day1_PropDead_RxnNorm, Day1_MitoROS_RxnNorm, Day1_MitoMemPot_RxnNorm, ncol=1)
dev.off()
# all day 14
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis/Output/FlowCytometry/Day14_All_RxnNorm.pdf"), height = 12)
ggarrange(Day14_PropLive_RxnNorm, Day14_PropDead_RxnNorm, Day14_MitoROS_RxnNorm, Day14_MitoMemPot_RxnNorm, ncol=1)
dev.off()
# prop live cells
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis/Output/FlowCytometry/LiveCells_RxnNorm.pdf"), height = 8)
ggarrange(Day1_PropLive_RxnNorm, Day14_PropLive_RxnNorm, ncol=1)
dev.off()
# prop dead cells
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis/Output/FlowCytometry/DeadCells_RxnNorm.pdf"), height = 8)
ggarrange(Day1_PropDead_RxnNorm, Day14_PropDead_RxnNorm, ncol=1)
dev.off()
# mitochondrialsuperoxide
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis/Output/FlowCytometry/MitoSox_RxnNorm.pdf"), height = 8)
ggarrange(Day1_MitoROS_RxnNorm, Day14_MitoROS_RxnNorm, ncol=1)
dev.off()
# itochondrial membrane potential
pdf(paste0("C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis/Output/FlowCytometry/MembranePotential_RxnNorm.pdf"), height = 8)
ggarrange(Day1_MitoMemPot_RxnNorm, Day14_MitoMemPot_RxnNorm,ncol=1)
dev.off()
# for loop d
Dates  <- as.data.frame(list(unique(paste(data_filt$Date))))
# for loop i
pCO2history_treatments  <- as.data.frame(list(unique(paste(data_filt$pCO2_history))))
# for loop m
FlowCy_probes           <- as.data.frame(list(c('SYBR_PI_prop_alive_ADJ',
'SYBR_PI_prop_dead_ADJ',
'MitoSoxGreen_Mean_FL1',
'JC10_FL2_FL1_Ratio')))
# prepare data for analysis
data2 <- data_filt %>%
dplyr::select(c("Date","pCO2_history","pCO2_exposure",
"SYBR_PI_prop_alive_ADJ","SYBR_PI_prop_dead_ADJ",
"MitoSoxGreen_Mean_FL1", "JC10_FL2_FL1_Ratio"))
# Call the cumulative dataframe that we will write to in the for loop below
df_total              <- data.frame() # start dataframe
stats.table           <- data.frame(matrix(nrow = 1, ncol = 10)) # create dataframe to save cumunalitively during for loop
colnames(stats.table) <- c('Date',
'pCO2_history',
'FlowCyProbe',
'Test',
'Shapiro',
'Levenes',
'DF',
'Fvalue',
'chisquared',
'Pvalue') # names for comuns in the for loop
for (d in 1:nrow(Dates)) {
data_by_date <- data2 %>%
dplyr::filter(Date %in% Dates[d,1])
for (i in 1:nrow(pCO2history_treatments)) {
# filter the dataset
data_by_history <- data_by_date %>%
dplyr::filter(pCO2_history %in% pCO2history_treatments[i,1])
#dplyr::filter(pCO2_exposure %in% gsub('.* ', '', treatments[i,1]))
for (m in 1:nrow(FlowCy_probes)) {
# if loop for probe type-speicif testing based on the naure of the data..
if (substr(FlowCy_probes[m,],1,4) == 'SYBR') { # if proportion data (0-1) we want to run beta regression models
colNum   <- which( colnames(data_by_history)==FlowCy_probes[m,])
data_by_history[,colNum] = as.numeric(data_by_history[,colNum])
modBetaReg     <- betareg(data_by_history[,colNum]~pCO2_exposure, data = data_by_history) # beta reg model suitable for prop data
modSUMMARY     <- joint_tests(modBetaReg) # use 'emmeans' pavkage for an anova-like table
modSUMMARYDF   <- signif(modSUMMARY[["df1"]][1], 2) # cal p value for anova table - 2 sig figs
modSUMMARYFval <- signif(modSUMMARY[["F.ratio"]][1], 4) # cal p value for anova table - 2 sig figs
modSUMMARYchi  <- NA
modSUMMARYPval <- signif(modSUMMARY[["p.value"]][1], 4) # cal p value for anova table - 2 sig figs
testRun        <- "Beta regression model"
shapTEST       <- 'NA' # proportion data between 0-1 is non parametric
levTEST        <- as.data.frame('NA','NA') # proportion data between 0-1 is non parametric, need to make table for if/else below
} else { # for the continuous data run ANOVA or Kruskal Wallis for norm/non-param. models
colNum   <- which( colnames(data_by_history)==FlowCy_probes[m,])
data_by_history[,colNum] = as.numeric(data_by_history[,colNum])
modAOV   <- aov(lm(data_by_history[,colNum]~pCO2_exposure, data = data_by_history))
shapTEST <- shapiro.test(resid(modAOV))
levTEST  <- leveneTest(modAOV)
# within continuous data.. run either ANOVA or Kruskal Wallis based on normality testing..
if(shapTEST$p.value> 0.05 & levTEST$`Pr(>F)`[1] > 0.05) { # if normal - run anova
modSUMMARY     <- summary(modAOV) # create anova table summary
modSUMMARYDF   <- signif(modSUMMARY[[1]][["Df"]][1], 2) # cal p value for anova table - 2 sig figs
modSUMMARYFval <- signif(modSUMMARY[[1]][["F value"]][1], 4) # cal p value for anova table - 2 sig figs
modSUMMARYchi  <- NA
modSUMMARYPval <- signif(modSUMMARY[[1]][["Pr(>F)"]][1], 4) # cal p value for anova table - 2 sig figs
testRun        <- "One-way ANOVA"
} else { # if non-normal (either shapiro OR levenes defied) - run the Kruskal Wallis
modSUMMARY     <- kruskal.test(data_by_history[,colNum] ~ pCO2_exposure, data = data_by_history)
modSUMMARYDF   <- signif(modSUMMARY[[2]], 2) # cal p value for Kruskal wallis test table - 2 sig figs
modSUMMARYFval <- NA
modSUMMARYchi  <- signif(modSUMMARY[[1]], 4) # cal p value for Kruskal wallis test table - 2 sig figs
modSUMMARYPval <- signif(modSUMMARY[[3]], 4) # cal p value for Kruskal wallis test table - 2 sig figs
testRun        <- "Kruskal Wallis"
} # end of if loop WITHIN the 'else' for probe type-specif testing
} # close the if else loop for probe type-specific testing (we are still in the the 'm' for loop!)
stats.table$Date          <- data_by_history$Date[1]
stats.table$pCO2_history  <- pCO2history_treatments[i,]
stats.table$FlowCyProbe   <- FlowCy_probes[m,]
stats.table$Test          <- testRun
if (shapTEST[1] == 'NA') {
stats.table$Shapiro = 'NA'} else {stats.table$Shapiro <- shapTEST$p.value}
if (levTEST[1,1] == 'NA') {
stats.table$Levenes = 'NA'} else {stats.table$Levenes <- levTEST$`Pr(>F)`[1]}
stats.table$DF            <- modSUMMARYDF
stats.table$Fvalue        <- modSUMMARYFval
stats.table$chisquared    <- modSUMMARYchi
stats.table$Pvalue        <- modSUMMARYPval
df       <- data.frame(stats.table) # name dataframe for this single row
df_total <- rbind(df_total,df) #bind to a cumulative list dataframe
print(df_total) # print to monitor progress
} # close 'm' for loop - through each flow cy probe
} # close 'i' for loop - through each pCO2 history (low, moderate, severe)
} # close 'd' for loop - through each sampling data (5/2/2023 and 5/16/2023)
View(df_total)
