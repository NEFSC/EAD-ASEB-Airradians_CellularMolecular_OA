as.numeric(gsub('.*_','',Type))) %>% # (i.e. 25 in 'Standards_25')
dplyr::mutate(Unique_ID = paste0(Run_date,'_Plate_',Plate,'_', Type))
ATP_standards
# * (3) separate standards from samples, format the standards
ATP_standards <- raw_ATP_merged_om %>%
dplyr::filter(grepl('Standard', Type)) %>% # grepl for 'contains' string
dplyr::mutate(ATP_nmol =
as.numeric(gsub('.*_','',Type))) %>% # (i.e. 25 in 'Standards_25')
dplyr::mutate(Unique_ID = paste0(Run_date,'_', Type))
ATP_standards
# * (4) Run standard curve, calculate totalprotein
ATP_background_zero <- ATP_standards %>%
dplyr::filter(Type %in% 'Standard_0') %>%
dplyr::select(Unique_ID, Run_date, ATP_nmol, Abs_570nm) %>% # select columns of interest
dplyr::group_by(Unique_ID, Plate, ATP_nmol) %>% # group by to get the means
dplyr::summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) # get all the stats
# * (4) Run standard curve, calculate totalprotein
ATP_background_zero <- ATP_standards %>%
dplyr::filter(Type %in% 'Standard_0') %>%
dplyr::select(Unique_ID, Run_date, ATP_nmol, Abs_570nm) %>% # select columns of interest
dplyr::group_by(Unique_ID, Run_date, ATP_nmol) %>% # group by to get the means
dplyr::summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) # get all the stats
ATP_background_zero
ATP_standards %>%
#dplyr::filter(!Type %in% 'Standard_0') %>%
dplyr::mutate(Abs_570nm_cor =
case_when(Plate == 1 ~ (Abs_570nm_cor-0.08355),
Plate == 2 ~ (Abs_570nm_cor-0.08090) ) ) %>%
dplyr::select(Unique_ID, Run_date, ATP_nmol, Abs_570nm_cor) %>% # select columns
dplyr::group_by(Unique_ID, Run_date, ATP_nmol)
ATP_standards_means <- ATP_standards %>%
#dplyr::filter(!Type %in% 'Standard_0') %>%
dplyr::mutate(Abs_570nm_cor =
case_when(Run_date == 20230828 ~ (Abs_570nm_cor-0.04675),
Run_date == 20230829 ~ (Abs_570nm_cor-0.04680) ) ) %>%
dplyr::select(Unique_ID, Run_date, ATP_nmol, Abs_570nm_cor) %>% # select columns
dplyr::group_by(Unique_ID, Run_date, ATP_nmol) %>% # group by to get the means
dplyr::summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) # get all the stats
ATP_standards_means <- ATP_standards %>%
#dplyr::filter(!Type %in% 'Standard_0') %>%
dplyr::mutate(Abs_570nm_cor =
case_when(Run_date == 20230828 ~ (Abs_570nm-0.04675),
Run_date == 20230829 ~ (Abs_570nm-0.04680) ) ) %>%
dplyr::select(Unique_ID, Run_date, ATP_nmol, Abs_570nm_cor) %>% # select columns
dplyr::group_by(Unique_ID, Run_date, ATP_nmol) %>% # group by to get the means
dplyr::summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) # get all the stats
ATP_standards_means
# * (4) Run standard curve, calculate totalprotein
ATP_background_zero <- ATP_standards %>%
dplyr::filter(Type %in% 'Standard_0') %>%
dplyr::select(Unique_ID, Run_date, ATP_nmol, Abs_570nm) %>% # select columns of interest
dplyr::group_by(Unique_ID, Run_date, ATP_nmol) %>% # group by to get the means
dplyr::summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) # get all the stats
ATP_background_zero
ATP_standards_means %>%
dplyr::filter(!ATP_nmol %in% 0)
BCA_standards_means <- BCA_standards %>%
#dplyr::filter(!Type %in% 'Standard_0') %>%
dplyr::mutate(Abs_562nm_cor =
case_when(Plate == 1 ~ (Abs_562nm-0.08355),
Plate == 2 ~ (Abs_562nm-0.08090) ) ) %>%
dplyr::select(Unique_ID, Plate, BCA_ug_mL, Abs_562nm_cor) %>% # select columns
dplyr::group_by(Unique_ID, Plate, BCA_ug_mL) %>% # group by to get the means
dplyr::summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) # get all the stats
BCA_standards_means
BCA_stand_plots <- BCA_standards_means %>%
dplyr::filter(!BCA_ug_mL %in% 0) %>%  # ommit zeros
# dplyr::mutate(mean_cor =
#                 case_when(Plate == 1 ~ (mean-0.08355),
#                           Plate == 2 ~ (mean-0.08090) ) ) %>%
dplyr::filter(!BCA_ug_mL %in% 25) %>% # hash me out to test
ggplot(aes(y=mean, x=BCA_ug_mL)) +
geom_point() +
theme_bw() +
#geom_line() +
stat_poly_line() +
stat_poly_eq(use_label(c("eq", "R2"))) +
facet_wrap(~Plate)
BCA_stand_plots
# * (5) Calculate Total protein per sample; subtract out background + correct for standard curve +  average
# Again, Plate 1 blank to correct by is 0.08355
# Again, Plate 2 blank to correct by is 0.08090
TotalProtein_final <- raw_BCA_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0('Plate_',Plate,'_', Scallop_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_562nm_cor = # correct the raw abs, subtract background
case_when(Plate == 1 ~ (Abs_562nm-0.08355), # for plate 1
Plate == 2 ~ (Abs_562nm-0.08090) ) ) %>% # for plate 2
dplyr::mutate(TotalProtein_ug_mL = # correct the raw abs, subtract background
case_when(Plate == 1 ~ (0.116+(0.00104*Abs_562nm)), # for plate 1
Plate == 2 ~ (0.151+(0.000962*Abs_562nm)) ) )  %>% # for plate 2
dplyr::group_by(Day,pCO2_history,pCO2_exposure,
Unique_ID, Plate, Scallop_ID) %>% # group by to get the means
dplyr::summarise(mean_TotalProtein_ug_mL = mean(TotalProtein_ug_mL),
sd_TotalProtein_ug_mL   = sd(TotalProtein_ug_mL),
n = n(),
se_TotalProtein_ug_mL   = sd_TotalProtein_ug_mL / sqrt(n))
ATP_stand_plots <- ATP_standards_means %>%
dplyr::filter(!ATP_nmol %in% 0) %>%  # ommit zeros
ggplot(aes(y=mean, x=ATP_nmol)) +
geom_point() +
theme_bw() +
#geom_line() +
stat_poly_line() +
stat_poly_eq(use_label(c("eq", "R2"))) +
facet_wrap(~Run_date)
ATP_stand_plots
ATP_stand_plots <- ATP_standards_means %>%
#dplyr::filter(!ATP_nmol %in% 0) %>%  # ommit zeros
ggplot(aes(y=mean, x=ATP_nmol)) +
geom_point() +
theme_bw() +
#geom_line() +
stat_poly_line() +
stat_poly_eq(use_label(c("eq", "R2"))) +
facet_wrap(~Run_date)
ATP_stand_plots
ATP_stand_plots <- ATP_standards_means %>%
#dplyr::filter(!ATP_nmol %in% 0) %>%  # ommit zeros
ggplot(aes(y=mean, x=ATP_nmol)) +
geom_point() +
theme_bw() +
#geom_line() +
stat_poly_line() +
stat_poly_eq(use_label(c("eq", "R2"))) +
facet_wrap(~Run_date)
ATP_stand_plots
ATP_stand_plots <- ATP_standards_means %>%
dplyr::filter(!ATP_nmol %in% 0) %>%  # ommit zeros
ggplot(aes(y=mean, x=ATP_nmol)) +
geom_point() +
theme_bw() +
#geom_line() +
stat_poly_line() +
stat_poly_eq(use_label(c("eq", "R2"))) +
facet_wrap(~Run_date)
ATP_stand_plots
ATP_stand_plots <- ATP_standards_means %>%
#dplyr::filter(!ATP_nmol %in% 0) %>%  # ommit zeros
ggplot(aes(y=mean, x=ATP_nmol)) +
geom_point() +
theme_bw() +
#geom_line() +
stat_poly_line() +
stat_poly_eq(use_label(c("eq", "R2"))) +
facet_wrap(~Run_date)
ATP_stand_plots
raw_ATP_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0(Run_date,'_', Type, Scallop_ID))
raw_ATP_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0(Run_date,'_', Type, Scallop_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_570nm_cor = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (Abs_570nm-0.04675), # for plate 1
Run_date == 20230829 ~ (Abs_570nm-0.04680) ) )
# * (5) Calculate Total protein per sample; subtract out background + correct for standard curve +  average
# Again, Plate 1 blank to correct by is 0.08355
# Again, Plate 2 blank to correct by is 0.08090
TotalProtein_final <- raw_BCA_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0('Plate_',Plate,'_', Scallop_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_562nm_cor = # correct the raw abs, subtract background
case_when(Plate == 1 ~ (Abs_562nm-0.08355), # for plate 1
Plate == 2 ~ (Abs_562nm-0.08090) ) ) %>% # for plate 2
dplyr::mutate(TotalProtein_ug_mL = # now calculate ug mL from standard curve
case_when(Plate == 1 ~ (0.116+(0.00104*Abs_562nm_cor)), # for plate 1
Plate == 2 ~ (0.151+(0.000962*Abs_562nm_cor)) ) )  %>% # for plate 2
dplyr::group_by(Day,pCO2_history,pCO2_exposure,
Unique_ID, Plate, Scallop_ID) %>% # group by to get the means
dplyr::summarise(mean_TotalProtein_ug_mL = mean(TotalProtein_ug_mL),
sd_TotalProtein_ug_mL   = sd(TotalProtein_ug_mL),
n = n(),
se_TotalProtein_ug_mL   = sd_TotalProtein_ug_mL / sqrt(n))
TotalProtein_final
Day1_TotalProtein_RxnNorm <- TotalProtein_final %>% # data %>%
dplyr::filter(Day == 1) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_TotalProtein_ug_mL = as.numeric(mean_TotalProtein_ug_mL)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_TotalProtein_ug_mL')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
TP_mean = mean(mean_TotalProtein_ug_mL), # mean
TP_sd = sd(mean_TotalProtein_ug_mL), # sd
TP_n = n(), # count
TP_se = TP_sd / sqrt(TP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=TP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(TP_mean)-(TP_se), # new means and se by treatment
ymax=(TP_mean)+(TP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("Total Protein") +
labs(y= "Total Protie (ug mL)", x = "pCO2 Exposure")
Day1_TotalProtein_RxnNorm # view the plot
# * (5) Calculate Total protein per sample; subtract out background + correct for standard curve +  average
# Again, Run_date 20230828, blank to correct by is 0.04675
# Again, Run_date 20230829, blank to correct by is 0.04680
TotalProtein_final <- raw_ATP_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0(Run_date,'_', Type, Scallop_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_570nm_cor = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (Abs_570nm-0.04675), # for plate 1
Run_date == 20230829 ~ (Abs_570nm-0.04680) ) ) %>% # for plate 2
dplyr::mutate(ATP_nmol = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (-0.0114+(0.0385*Abs_570nm_cor)), # for plate 1
Run_date == 20230829 ~ (-0.0248+(0.0994*Abs_570nm_cor)) ) )  %>% # for plate 2
dplyr::group_by(Day,pCO2_history,pCO2_exposure,
Unique_ID, Run_date, Scallop_ID) %>% # group by to get the means
dplyr::summarise(mean_TotalProtein_ug_mL = mean(TotalProtein_ug_mL),
sd_TotalProtein_ug_mL   = sd(TotalProtein_ug_mL),
n = n(),
se_TotalProtein_ug_mL   = sd_TotalProtein_ug_mL / sqrt(n))
raw_ATP_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0(Run_date,'_', Type, Scallop_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_570nm_cor = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (Abs_570nm-0.04675), # for plate 1
Run_date == 20230829 ~ (Abs_570nm-0.04680) ) ) %>% # for plate 2
dplyr::mutate(ATP_nmol = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (-0.0114+(0.0385*Abs_570nm_cor)), # for plate 1
Run_date == 20230829 ~ (-0.0248+(0.0994*Abs_570nm_cor)) ) )
raw_ATP_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0(Run_date,'_', Type, Scallop_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_570nm_cor = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (Abs_570nm-0.04675), # for plate 1
Run_date == 20230829 ~ (Abs_570nm-0.04680) ) ) %>% # for plate 2
dplyr::mutate(ATP_nmol = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (0.0385*Abs_570nm_cor), # for plate 1
Run_date == 20230829 ~ (0.0994*Abs_570nm_cor) ) )
# * (5) Calculate Total protein per sample; subtract out background + correct for standard curve +  average
# Again, Run_date 20230828, blank to correct by is 0.04675
# Again, Run_date 20230829, blank to correct by is 0.04680
ATP_final <- raw_ATP_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0(Run_date,'_', Type, Scallop_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_570nm_cor = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (Abs_570nm-0.04675), # for plate 1
Run_date == 20230829 ~ (Abs_570nm-0.04680) ) ) %>% # for plate 2
dplyr::mutate(ATP_nmol = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (0.0385*Abs_570nm_cor), # for plate 1
Run_date == 20230829 ~ (0.0994*Abs_570nm_cor) ) )  %>% # for plate 2
dplyr::group_by(Day,pCO2_history,pCO2_exposure,
Unique_ID, Run_date, Scallop_ID) %>% # group by to get the means
dplyr::summarise(mean_ATP_nmol = mean(ATP_nmol),
sd_ATP_nmol   = sd(ATP_nmol),
n = n(),
se_ATP_nmol   = sd_ATP_nmol / sqrt(n))
ATP_final
Day1_ATP_RxnNorm <- ATP_final %>% # data %>%
dplyr::filter(Day == 1) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_ATP_nmol = as.numeric(mean_ATP_nmol)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_ATP_nmol')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(mean_ATP_nmol), # mean
ATP_sd = sd(mean_ATP_nmol), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP") +
labs(y= "ATP (nmol - uncorrected)", x = "pCO2 Exposure")
Day1_ATP_RxnNorm # view the plot
Day14_ATP_RxnNorm <- ATP_final %>% # data %>%
dplyr::filter(Day == 14) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_ATP_nmol = as.numeric(mean_ATP_nmol)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_ATP_nmol')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(mean_ATP_nmol), # mean
ATP_sd = sd(mean_ATP_nmol), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP") +
labs(y= "ATP (nmol - uncorrected)", x = "pCO2 Exposure")
Day14_ATP_RxnNorm # view the plot
ATP_final
raw_ATP_merged_om
raw_ATP_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0(Run_date,'_', Type, Scallop_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_570nm_cor = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (Abs_570nm-0.04675), # for plate 1
Run_date == 20230829 ~ (Abs_570nm-0.04680) ) ) %>% # for plate 2
dplyr::mutate(ATP_nmol = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (0.0385*Abs_570nm_cor), # for plate 1
Run_date == 20230829 ~ (0.0994*Abs_570nm_cor) ) )
V = 0.00005 #50 ul, as liters = 0.0005
ATP_final <- raw_ATP_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0(Run_date,'_', Type, Scallop_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_570nm_cor = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (Abs_570nm-0.04675), # for plate 1
Run_date == 20230829 ~ (Abs_570nm-0.04680) ) ) %>% # for plate 2
dplyr::mutate(ATP_nmol = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ ((0.0385*Abs_570nm_cor)/ V  ), # for plate 1
Run_date == 20230829 ~ ((0.0994*Abs_570nm_cor)/ V  ) ) )  %>% # for plate 2
dplyr::mutate()
ATP_final <- raw_ATP_merged_om %>%
dplyr::filter(Type %in% 'Sample') %>% # call samples
dplyr::mutate(Unique_ID =
paste0(Run_date,'_', Type, Scallop_ID)) %>% # unique ID t0 group by
dplyr::mutate(Abs_570nm_cor = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ (Abs_570nm-0.04675), # for plate 1
Run_date == 20230829 ~ (Abs_570nm-0.04680) ) ) %>% # for plate 2
dplyr::mutate(ATP_nmol = # correct the raw abs, subtract background
case_when(Run_date == 20230828 ~ ((0.0385*Abs_570nm_cor)/ V  ), # for plate 1
Run_date == 20230829 ~ ((0.0994*Abs_570nm_cor)/ V  ) ) )  %>% # for plate 2
dplyr::group_by(Day,pCO2_history,pCO2_exposure,
Unique_ID, Run_date, Scallop_ID) %>% # group by to get the means
dplyr::summarise(mean_ATP_nmol = mean(ATP_nmol),
sd_ATP_nmol   = sd(ATP_nmol),
n = n(),
se_ATP_nmol   = sd_ATP_nmol / sqrt(n))
ATP_final
Day1_ATP_RxnNorm <- ATP_final %>% # data %>%
dplyr::filter(Day == 1) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_ATP_nmol = as.numeric(mean_ATP_nmol)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_ATP_nmol')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(mean_ATP_nmol), # mean
ATP_sd = sd(mean_ATP_nmol), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP") +
labs(y= "ATP (nmol - uncorrected)", x = "pCO2 Exposure")
Day1_ATP_RxnNorm # view the plot
ATP_final
TotalProtein_final
TotalProtein_prepmerge <- TotalProtein_final[,c(1:3.6.7)]
TotalProtein_prepmerge <- TotalProtein_final[,c(1:3.6,7)]
TotalProtein_prepmerge
TotalProtein_final
TotalProtein_prepmerge <- TotalProtein_final[,c(1:3,6,7)]
TotalProtein_prepmerge
MASTER_DF <- merge(ATP_final, TotalProtein_prepmerge, by = 'Scallop_ID', all=T)
MASTER_DF
ATP_final
ATP_final_prepmerge    <- ATP_final[,c(1:3,6,7)]
ATP_final_prepmerge
MASTER_DF <- merge(ATP_final_prepmerge,
TotalProtein_prepmerge,
all=T)
MASTER_DF
MASTER_DF <- merge(ATP_final_prepmerge,
TotalProtein_prepmerge,
all=T)  %>% # looks like we have 3 absent values for total protein..
dplyr::mutate(ATP_nmol_ug_protein = mean_ATP_nmol/mean_TotalProtein_ug_mL)
MASTER_DF
Day1_ATP_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 1) %>% # filter for desired date of rhte experiment
dplyr::mutate(ATP_nmol_ug_protein = as.numeric(ATP_nmol_ug_protein)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','ATP_nmol_ug_protein')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(ATP_nmol_ug_protein), # mean
ATP_sd = sd(ATP_nmol_ug_protein), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP") +
labs(y= "ATP (nmol ug protein-1)", x = "pCO2 Exposure")
Day1_ATP_RxnNorm # view the plot
Day1_ATP_RxnNorm <- ATP_final %>% # data %>%
dplyr::filter(Day == 1) %>% # filter for desired date of rhte experiment
dplyr::mutate(mean_ATP_nmol = as.numeric(mean_ATP_nmol)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','mean_ATP_nmol')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(mean_ATP_nmol), # mean
ATP_sd = sd(mean_ATP_nmol), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP") +
labs(y= "ATP (nmol - uncorrected)", x = "pCO2 Exposure")
Day1_ATP_RxnNorm # view the plot
Day14_ATP_RxnNorm <- MASTER_DF %>% # data %>%
dplyr::filter(Day == 14) %>% # filter for desired date of rhte experiment
dplyr::mutate(ATP_nmol_ug_protein = as.numeric(ATP_nmol_ug_protein)) %>%
dplyr::select(c('Day','pCO2_exposure','pCO2_history','ATP_nmol_ug_protein')) %>%
na.omit() %>%
# we have means (from x2 assay reps per individual), now mean by treatment!
group_by(pCO2_exposure, pCO2_history) %>% # group by columns for treatment
dplyr::summarise( # summarise to acquire the mean and SE for plotting
ATP_mean = mean(ATP_nmol_ug_protein), # mean
ATP_sd = sd(ATP_nmol_ug_protein), # sd
ATP_n = n(), # count
ATP_se = ATP_sd / sqrt(ATP_n)) %>% # SE
# plot it
ggplot(aes(x=pCO2_exposure, y=ATP_mean, group=pCO2_history)) + # call the new mean
geom_line(aes(group = factor(pCO2_history),
linetype = pCO2_history),
size = 0.5,
position=position_dodge(.4)) +  # connect a line between variables
scale_linetype_manual(values=c("solid", "dashed", "dotted")) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history), size = 4.5,position=position_dodge(.4)) +
scale_shape_manual(values=c(21, 22, 24)) + # filled circle, filled triangle, and X
scale_fill_manual(values=c("#009E73","#E69F00", "#CC79A7")) + # fill circles
geom_errorbar(aes(ymin=(ATP_mean)-(ATP_se), # new means and se by treatment
ymax=(ATP_mean)+(ATP_se)), # new means and se by treatment
width=0,position=position_dodge(.4)) + # width determines the length of the end ticks
theme_classic() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),legend.position = "none") +
ggtitle("ATP") +
labs(y= "ATP (nmol ug protein-1)", x = "pCO2 Exposure")
Day14_ATP_RxnNorm # view the plot
ggarrange(Day1_ATP_RxnNorm,Day14_ATP_RxnNorm, nrow=2)
