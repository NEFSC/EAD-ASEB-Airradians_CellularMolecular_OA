scale_fill_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = cols)+
scale_colour_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = cols) +
theme_bw() +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 14") +
coord_equal()
PCAbiplot_D14
cols = c('#009E73','#009E73','#009E73',
'#E69F00','#E69F00','#E69F00',
'#CC79A7','#CC79A7','#CC79A7')
PCAbiplot_D14     <- fviz_pca_biplot(pca_res_D14,
label="var",
habillage=Merge_master_D14$pCO2_all) +
# palette = c("#009E73","#E69F00", "#CC79A7")) +
# ADD ggforce's ellipses
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
# scale_color_manual(c('grey','grey','grey',
#                      'grey','grey','grey',
#                      'grey','grey','grey')) +
scale_fill_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = cols)+
scale_colour_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = cols) +
theme_bw() +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 14") +
coord_equal()
PCAbiplot_D14
shapes = c(16, 15, 17,
16, 15, 17,
16, 15, 17)
PCAbiplot_D14     <- fviz_pca_biplot(pca_res_D14,
label="var",
habillage=Merge_master_D14$pCO2_all) +
# palette = c("#009E73","#E69F00", "#CC79A7")) +
# ADD ggforce's ellipses
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
# scale_color_manual(c('grey','grey','grey',
#                      'grey','grey','grey',
#                      'grey','grey','grey')) +
scale_fill_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = cols)+
scale_colour_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = cols) +
scale_fill_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = cols)+
scale_shape_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = shapes) +
theme_bw() +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 14") +
coord_equal()
PCAbiplot_D14
# print plots
pdf("Output/D14_PCA_hemolymph_facetted.pdf", height=10, width=20)
ggarrange(
(ggarrange(PCAbiplot_D14_LOWhist,
PCAbiplot_D14_MODhist,
PCAbiplot_D14_HIGHhist, ncol=3)),
(ggarrange(PCAbiplot_D14_LOWexp,
PCAbiplot_D14_MODexp,
PCAbiplot_D14_HIGHexp, ncol=3)),
nrow=2)
dev.off()
pdf("Output/D14_PCA_hemolymph.pdf", height=5, width=5)
print(PCAbiplot_D14)
dev.off()
# save plot
pdf("Output/D14_PCA_hemolymph.pdf", height=5, width=8)
print(PCAbiplot_D14)
dev.off()
PCAbiplot_D14_exp   <- fviz_pca_biplot(pca_res_D14,
label="var",
habillage=Merge_master_D14$pCO2_exposure,
palette = c("#009E73","#E69F00", "#CC79A7")) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
theme_bw() +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 14") +
coord_equal()
PCAbiplot_D14_exp
PCAbiplot_D14_history <- fviz_pca_biplot(pca_res_D14,
label="var",
habillage=Merge_master_D14$pCO2_history,
palette = c("#009E73","#E69F00", "#CC79A7")) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
theme_bw() +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 14: by exposure") +
coord_equal()
PCAbiplot_D14_history
PCAbiplot_D14_exp      <- fviz_pca_biplot(pca_res_D14,
label="var",
habillage=Merge_master_D14$pCO2_exposure,
palette = c("#009E73","#E69F00", "#CC79A7")) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
theme_bw() +
scale_shape_manual(breaks = unique(Merge_master_D14$pCO2_exposure),
values = c(16, 15, 17)) +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 14: by exposure") +
coord_equal()
PCAbiplot_D14_history <- fviz_pca_biplot(pca_res_D14,
label="var",
habillage=Merge_master_D14$pCO2_history,
palette = c("#009E73","#E69F00", "#CC79A7")) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
theme_bw() +
scale_shape_manual(breaks = unique(Merge_master_D14$pCO2_history),
values = c(16, 15, 17)) +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 14: by exposure") +
coord_equal()
PCAbiplot_D14_history
PCAbiplot_D14         <- fviz_pca_biplot(pca_res_D14,
label="var",
habillage=Merge_master_D14$pCO2_all) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
scale_fill_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = cols)+
scale_colour_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = cols) +
scale_fill_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = cols)+
scale_shape_manual(breaks = unique(Merge_master_D14$pCO2_all),
values = shapes) +
theme_bw() +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 14") +
coord_equal()
PCAbiplot_D14_history <- fviz_pca_biplot(pca_res_D14,
label="var",
habillage=Merge_master_D14$pCO2_history,
palette = c("#009E73","#E69F00", "#CC79A7")) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
theme_bw() +
scale_shape_manual(breaks = unique(Merge_master_D14$pCO2_history),
values = c(16, 15, 17)) +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 14: by exposure") +
coord_equal()
# save plot
pdf("Output/D14_PCA_hemolymph.pdf", height=5, width=20)
ggarrange(PCAbiplot_D14,
PCAbiplot_D14_exp,
PCAbiplot_D14_history, nrow=1, ncol=3)
dev.off()
PCAbiplot_D14_history <- fviz_pca_biplot(pca_res_D14,
label="var",
habillage=Merge_master_D14$pCO2_history,
palette = c("#009E73","#E69F00", "#CC79A7")) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
theme_bw() +
scale_shape_manual(breaks = unique(Merge_master_D14$pCO2_history),
values = c(16, 15, 17)) +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 14: by history") +
coord_equal()
# save plot
pdf("Output/D14_PCA_hemolymph.pdf", height=5, width=20)
ggarrange(PCAbiplot_D14,
PCAbiplot_D14_exp,
PCAbiplot_D14_history, nrow=1, ncol=3)
dev.off()
pca_res_D1       <- prcomp(data_normalized_D1, scale. = TRUE)
Merge_master_D1  <- Merge_master_OM_D1 %>% dplyr::mutate(pCO2_all = paste0(pCO2_history, " x ", pCO2_exposure))
# vars for plotting
cols = c('#009E73','#009E73','#009E73',
'#E69F00','#E69F00','#E69F00',
'#CC79A7','#CC79A7','#CC79A7')
shapes = c(16, 15, 17,
16, 15, 17,
16, 15, 17)
PCAbiplot_D1         <- fviz_pca_biplot(pca_res_D1,
label="var",
habillage=Merge_master_D1$pCO2_all) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
scale_fill_manual(breaks = unique(Merge_master_D1$pCO2_all),
values = cols)+
scale_colour_manual(breaks = unique(Merge_master_D1$pCO2_all),
values = cols) +
scale_fill_manual(breaks = unique(Merge_master_D1$pCO2_all),
values = cols)+
scale_shape_manual(breaks = unique(Merge_master_D1$pCO2_all),
values = shapes) +
theme_bw() +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 1") +
coord_equal()
PCAbiplot_D1_exp     <- fviz_pca_biplot(pca_res_D1,
label="var",
habillage=Merge_master_D1$pCO2_exposure,
palette = c("#009E73","#E69F00", "#CC79A7")) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
theme_bw() +
scale_shape_manual(breaks = unique(Merge_master_D1$pCO2_exposure),
values = c(16, 15, 17)) +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 1: by exposure") +
coord_equal()
PCAbiplot_D1_history <- fviz_pca_biplot(pca_res_D1,
label="var",
habillage=Merge_master_D1$pCO2_history,
palette = c("#009E73","#E69F00", "#CC79A7")) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
theme_bw() +
scale_shape_manual(breaks = unique(Merge_master_D1$pCO2_history),
values = c(16, 15, 17)) +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 1: by history") +
coord_equal()
# save plot
pdf("Output/D1_PCA_hemolymph.pdf", height=5, width=20)
ggarrange(PCAbiplot_D1,
PCAbiplot_D1_exp,
PCAbiplot_D1_history, nrow=1, ncol=3)
dev.off()
# save plot
pdf("Output/D1_PCA.pdf", height=5, width=20)
ggarrange(PCAbiplot_D1,
PCAbiplot_D1_exp,
PCAbiplot_D1_history, nrow=1, ncol=3)
dev.off()
# save plot
pdf("Output/D1_PCA_all.pdf", height=5, width=20)
ggarrange(PCAbiplot_D1,
PCAbiplot_D1_exp,
PCAbiplot_D1_history, nrow=1, ncol=3)
dev.off()
# print plots
pdf("Output/D1_PCA_all_facetted.pdf", height=10, width=20)
ggarrange(
(ggarrange(PCAbiplot_D1_LOWhist,
PCAbiplot_D1_MODhist,
PCAbiplot_D1_HIGHhist, ncol=3)),
(ggarrange(PCAbiplot_D1_LOWexp,
PCAbiplot_D1_MODexp,
PCAbiplot_D1_HIGHexp, ncol=3)),
nrow=2)
dev.off()
# print plots
pdf("Output/D1_PCA_hemolymph_facetted.pdf", height=10, width=20)
ggarrange(
(ggarrange(PCAbiplot_D1_LOWhist_FConly,
PCAbiplot_D1_MODhist_FConly,
PCAbiplot_D1_HIGHhist_FConly, ncol=3)),
(ggarrange(PCAbiplot_D1_LOWexp_FConly,
PCAbiplot_D1_MODexp_FConly,
PCAbiplot_D1_HIGHexp_FConly, ncol=3)),
nrow=2)
dev.off()
PCAbiplot_D1_FConly         <- fviz_pca_biplot(pca_res_D1_FConly,
label="var",
habillage=Subset_master_D1$pCO2_all) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
scale_fill_manual(breaks = unique(Subset_master_D1$pCO2_all),
values = cols)+
scale_colour_manual(breaks = unique(Subset_master_D1$pCO2_all),
values = cols) +
scale_fill_manual(breaks = unique(Subset_master_D1$pCO2_all),
values = cols)+
scale_shape_manual(breaks = unique(Subset_master_D1$pCO2_all),
values = shapes) +
theme_bw() +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 1") +
coord_equal()
PCAbiplot_D1_exp_FConly     <- fviz_pca_biplot(pca_res_D1_FConly,
label="var",
habillage=Subset_master_D1$pCO2_exposure,
palette = c("#009E73","#E69F00", "#CC79A7")) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
theme_bw() +
scale_shape_manual(breaks = unique(Subset_master_D1$pCO2_exposure),
values = c(16, 15, 17)) +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 1: by exposure") +
coord_equal()
PCAbiplot_D1_history_FConly <- fviz_pca_biplot(pca_res_D1_FConly,
label="var",
habillage=Subset_master_D1$pCO2_history,
palette = c("#009E73","#E69F00", "#CC79A7")) +
ggforce::geom_mark_ellipse(aes(fill = Groups, color = Groups)) +
theme_bw() +
scale_shape_manual(breaks = unique(Subset_master_D1$pCO2_history),
values = c(16, 15, 17)) +
xlim(-4, 4) + ylim (-4, 4) +
theme(legend.position = 'bottom') +
ggtitle("Day 1: by history") +
coord_equal()
# save plot
pdf("Output/D1_PCA_hemolymph.pdf", height=5, width=20)
ggarrange(PCAbiplot_D1_FConly,
PCAbiplot_D1_exp_FConly,
PCAbiplot_D1_history_FConly, nrow=1, ncol=3)
dev.off()
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(devtools)
library(ggpubr)
library(hrbrthemes)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # personal computer
# setwd("C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis") # Work computer
# LOAD DATA :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
resp.data           <- read.csv(file="Output/Respiration/RR_LoLin_raw.csv", header=T) %>%
dplyr::filter(!(Date %in% "9/14/2021" &
Filename %in% 'Run_1_raw.txt')) %>%  # read the calculate raw rates from 'resp_LoLin' script - contains the calculated rate (not normalized for blanks) for each sensor-channel
dplyr::filter(!(Date %in% "10/26/2022" &
Filename %in% 'run_1_raw.txt' & Channel %in% 'CH2')) %>%  # omit bad data point
dplyr::filter(!(Date %in% c("3/16/2023", # larvae from full reciprocal trial with F2s - analyzed separately in RespirationRates_calc_larvae
"4/7/2023",  # larvae from full reciprocal trial with F3s - analyzed separately in RespirationRates_calc_larvae
"4/12/2023")))# larvae from full reciprocal trial with F3s - analyzed separately in RespirationRates_calc_larvae
start.end_resp.data <- read.csv(file="Output/Respiration/RR_start_end_raw.csv", header=T, sep = "") #%>%
#dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt') # read the start and end simplified resp data
resp.ref            <- read.csv(file="Data/Physiology/Respiration/Reference_resp_ID.csv", header=T) %>%
dplyr::filter(!Date %in% "9/14/2021" | !Filename %in% 'Run_1_raw.txt')
# LOAD PACKAGES :::::::::::::::::::::::::::::::::::::::::::::::::::::::
library(dplyr)
library(ggplot2)
library(forcats)
library(lme4)
library(lmerTest)
library(see)
library(performance)
library(car)
library(kableExtra)
library(pander)
library(data.table)
library(stringr)
library(latex2exp)
library(Rmisc)
library(devtools)
library(ggpubr)
library(hrbrthemes)
# SET WORKING DIRECTORY :::::::::::::::::::::::::::::::::::::::::::::::
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_multigen_OA/RAnalysis")
# F1s ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
RR_master_F1 <- read.csv(file="Output/Respiration/RR_calc_raw.csv", header=T) %>%
filter(!Food %in% 'unfed') %>% # omit low food trial data
# filter out the F2 measurements
filter(!Date %in% c('8/30/2022', '11/16/2022','8/30/2022', '11/16/2022', '1/31/2023', '2/23/2023', '3/27/2023',  '5/18/2023')) %>% # an F2 measurement
filter(!(Date == '9/22/2022' & filetype =='SDR_data')) %>%  # F2s were also measured on 9/22 but with the SDR system (F1s with the LoLigo)
dplyr::mutate(Age = case_when(Date == '9/14/2021'  ~ 50,
Date == '9/30/2021'  ~ 66,
Date == '10/26/2021'  ~ 92,
Date == '2/2/2022' ~ 191,
Date == '3/1/2022'  ~ 218,
Date == '9/22/2022'  ~ 423,
Date == '10/26/2022' ~ 457)) %>%
dplyr::mutate(Gen = 'F1') %>%
dplyr::mutate(Age = as.factor(Age)) %>%
dplyr::arrange(Age)
unique(RR_master_F1$Date)
# F2s ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
RR_master_F2 <- read.csv(file="Output/Respiration/RR_calc_raw.csv", header=T) %>%
filter(!Food %in% 'unfed') %>% # omit low food trial data
# filter out the F2 measurements
filter(Date %in% c('8/30/2022', '9/22/2022', '11/16/2022', '1/31/2023', '2/23/2023', '3/27/2023')) %>% # an F2 measurement
filter(!(Date == '9/22/2022' & filetype =='LoLigo_data')) %>% # F1s were also measured on 9/22 but with the LoLigo system (F2s with the SDR)
# unique(RR_master$Date) # "10/26/2021" "2/2/2022"   "3/1/2022"   "8/30/2022"  "9/14/2021"  "9/22/2022"  "9/30/2021"
dplyr::mutate(Age = case_when(Date == '8/30/2022'   ~ 13,
Date == '9/22/2022'   ~ 36,
Date == '11/16/2022'  ~ 91,
Date == '1/31/2023'   ~ 167,
Date == '2/23/2023'   ~ 190,
Date == '3/27/2023'   ~ 222)) %>%
dplyr::mutate(Gen = 'F2') %>%
dplyr::mutate(Age = as.factor(Age)) %>%
dplyr::arrange(Age)
unique(RR_master_F2$Date)
# F3s ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
RR_master_F3 <- read.csv(file="Output/Respiration/RR_calc_raw.csv", header=T) %>%
# filter out targets
filter(Date %in% c('5/18/2023')) %>% # an signle F3 grow out measurment (so far!!!)
dplyr::mutate(Age = case_when(Date == '5/18/2023'   ~ 100)) %>%
dplyr::mutate(Gen = 'F3') %>%
dplyr::mutate(Age = as.factor(Age)) %>%
dplyr::arrange(Age)
unique(RR_master_F3$Date)
RR_master <- rbind(RR_master_F1, RR_master_F2, RR_master_F3)
SumTable <- RR_master_F2[!is.na(RR_master_F2$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date", "Age")) %>%
dplyr::arrange(Age)
SumTable
SumTable_treatment <- RR_master_F2[!is.na(RR_master_F2$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date", "Age", "pCO2")) %>%
dplyr::arrange(Age)
SumTable_treatment
SumTable <- RR_master_F1[!is.na(RR_master_F1$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date", "Age")) %>%
dplyr::arrange(Age)
SumTable
SumTable_treatment <- RR_master_F1[!is.na(RR_master_F1$Length_um),] %>%
mutate(Length_mm = Length_um/1000) %>%
summarySE(measurevar="Length_mm", groupvars=c("Date", "Age", "pCO2")) %>%
dplyr::arrange(Age)
SumTable_treatment
RR_master$pCO2 <- factor(RR_master$pCO2, levels = c("500 uatm", "800 uatm", "1200 uatm"))
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# GET B FACTOR FOR ALL AVAILABLE INDIVIDUALS WITH TDW AND MO2 ::::::::::::::::::::::::::::::
RR_master_OM            <- RR_master %>%
filter(!is.na(resp_umol_hr)) %>%
filter(!is.na(Dry_Tissue_weight))
nrow(RR_master_OM) # 140
RR_master_OM$log10_VO2  <- log10(as.numeric(RR_master_OM$resp_umol_hr)) # assign resp value
RR_master_OM$log10_TDW  <- log10(as.numeric(RR_master_OM$Dry_Tissue_weight)) # assign length value
MO2_b.factor_PLOT <- RR_master_OM %>%
ggplot(aes(x=log10_TDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
MO2_b.factor_PLOT_facetted <- RR_master_OM %>%
ggplot(aes(x=log10_TDW, y=log10_VO2, color = pCO2)) +
geom_point() +
scale_color_manual(values=c("blue","orange", "purple")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left") +
facet_wrap(~pCO2)
# two outliers to remove and rerun below
print(ggarrange(MO2_b.factor_PLOT, MO2_b.factor_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# GET B FACTOR TWO OUTLIERS OMITTED (VIEW THE PREVIOUS) ::::::::::::::::::::::::::::::
RR_master_OM            <- RR_master %>% filter(!is.na(resp_umol_hr)) %>%  filter(!is.na(Dry_Tissue_weight))
RR_master_OM$log10_VO2  <- log10(as.numeric(RR_master_OM$resp_umol_hr)) # assign resp value
RR_master_OM$log10_TDW  <- log10(as.numeric(RR_master_OM$Dry_Tissue_weight)) # assign length value
# two outliers to remove and rerun below
print(ggarrange(MO2_b.factor_PLOT, MO2_b.factor_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
RR_master_OM %>%
dplyr::filter((log10_TDW > -1 & log10_VO2 < 0))
# two outliers to remove and rerun below
print(ggarrange(MO2_b.factor_PLOT, MO2_b.factor_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
RR_master_OM %>% dplyr::filter((log10_TDW > -0.5 & log10_VO2 < 0.5))
# two outliers to remove and rerun below
print(ggarrange(MO2_b.factor_PLOT, MO2_b.factor_PLOT_facetted, nrow = 2, ncol = 1)) # print the model diagnostics
RR_master_OM %>% dplyr::filter((log10_TDW > -0.5 & log10_VO2 < -0.5))
RR_master_OM %>% dplyr::filter((log10_TDW > -0.5 & log10_VO2 < -0.7))
RR_master_OM %>% dplyr::filter((log10_TDW > -0.5 & log10_VO2 < -0))
RR_master_OM %>% dplyr::filter((log10_TDW > -0.5 & log10_VO2 < -02))
RR_master_OM %>% dplyr::filter((log10_TDW > -0.5 & log10_VO2 < -0.2))
MO2_b.factor_PLOT_OM <- RR_master_OM %>%
dplyr::filter(!(log10_TDW > -0.5 & log10_VO2 < -0.2)) %>%  # outliers ommited (should be 2 data points)
ggplot(aes(x=log10_TDW, y=log10_VO2)) +
geom_point() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left")
MO2_b.factor_PLOT_facetted_OM <- RR_master_OM %>%
dplyr::filter(!(log10_TDW > -0.5 & log10_VO2 < -0.2)) %>%  # outliers ommited (should be 2 data points)
ggplot(aes(x=log10_TDW, y=log10_VO2, color = pCO2)) +
geom_point() +
scale_color_manual(values=c("blue","orange", "purple")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
scale_x_continuous(name ="log10_BodyMass; TDW in g") +
scale_y_continuous(name ="log10_MO2; RR in umol L-1 hr-1)") +
theme_classic() +
theme(legend.position="none",axis.title.y=element_text(size=7)) +
ggtitle("Metabolic scaling: log10_MO2 = log10_a + (b.factor * log10_BodyMass)") +
geom_smooth(method = lm, color = 'red') +
ggpmisc::stat_poly_eq(parse=T, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), label.x.npc = "left") +
facet_wrap(~pCO2)
print(ggarrange(MO2_b.factor_PLOT_OM, MO2_b.factor_PLOT_facetted_OM, nrow = 2, ncol = 1)) # print the model diagnostics
