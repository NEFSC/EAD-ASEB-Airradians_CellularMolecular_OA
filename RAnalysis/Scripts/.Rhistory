D14_LxM_history_metadata <- D14_meta_distance %>% dplyr::filter(pCO2_history %in% c('low', 'moderate'))
# DISTANCE (DV)
D14_HxL_history_dist    <- D14_meta_distance %>%
dplyr::filter(sample.id %in% D14_HxL_history_metadata$sample.id) %>%
dplyr::select(D14_HxL_history_metadata$sample.id) %>%
as.dist()
D14_HxM_history_dist   <- D14_meta_distance %>%
dplyr::filter(sample.id %in% D14_HxM_history_metadata$sample.id) %>%
dplyr::select(D14_HxM_history_metadata$sample.id) %>%
as.dist()
D14_LxM_history_dist   <- D14_meta_distance %>%
dplyr::filter(sample.id %in% D14_LxM_history_metadata$sample.id) %>%
dplyr::select(D14_LxM_history_metadata$sample.id) %>%
as.dist()
# RUN ADONIS FOR EACH PAIR
D14_adonis_HxL_history   <- adonis2(D14_HxL_history_dist  ~ pCO2_history, data=D14_HxL_history_metadata, perms = permutations)
D14_adonis_HxM_history   <- adonis2(D14_HxM_history_dist  ~ pCO2_history, data=D14_HxM_history_metadata, perms = permutations)
D14_adonis_LxM_history   <- adonis2(D14_LxM_history_dist  ~ pCO2_history, data=D14_LxM_history_metadata, perms = permutations)
D14_adonis_HxL_history
D14_adonis_HxM_history
D14_adonis_LxM_history
D14_LxM_history_dist
D14_HxM_history_dist
# RUN ADONIS FOR EACH PAIR
D14_adonis_HxL_history   <- adonis2(D14_HxL_history_dist  ~ pCO2_history, data=D14_HxL_history_metadata, perms = permutations)
D14_adonis_HxM_history   <- adonis2(D14_HxM_history_dist  ~ pCO2_history, data=D14_HxM_history_metadata, perms = permutations)
D14_adonis_LxM_history   <- adonis2(D14_LxM_history_dist  ~ pCO2_history, data=D14_LxM_history_metadata, perms = permutations)
D14_adonis_LxM_history
D14_adonis_HxM_history
D14_adonis_HxL_history
D14_adonis_LxM_history
# library(lmtest) # to receive p value from betareg model
# library(FSA) # for the Dun test post hoc for SRH non-parametric 2 way anova]
# library(emmeans)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(car)
# library(lmerTest)
library(tidyr)
# library(reshape2)
library(ggpubr)
# library(nlme)
# library(rcompanion) # to run the Schrier -Ray-Hare non parametric 2 way
library(ggpmisc) # stat_poly for inserting equation and R2 for ggplot line
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis") # sets the working directory for the entire R markdown file - no need to reload the wd
# WITHOUT PATH CORRECTION :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Ran on 202031004 - Plate 1
raw_1004_plate1      <- read.csv(file="Data/Colorimetric_assays/MDA/Runs_20231004/Plate1/Plate1_MDA_assay_nopathcorrection.csv",
sep = ",",
skip=2,
header=TRUE,
fileEncoding="latin1")
raw_1004_plate1_mtx  <- as.matrix(raw_1004_plate1[c(1:8),c(3:14)])
colnames(raw_1004_plate1_mtx) = c("1","2","3","4","5","6","7","8","9","10","11","12")
rownames(raw_1004_plate1_mtx) = c("A","B","C","D","E","F","G","H")
raw_1004_plate1_table <- as.data.frame.table(raw_1004_plate1_mtx, responseName = "value") %>%
dplyr::rename(well_row=Var1, well_column=Var2, Abs_695nm_no_path_correct=value) %>%
dplyr::mutate(well=paste0(well_row,well_column),
Run_date ="20231004",
Plate="1") %>%
dplyr::select(-c(well_row,well_column))
# Ran on 20230828 - Plate 2
raw_1004_plate2      <- read.csv(file="Data/Colorimetric_assays/MDA/Runs_20231004/Plate2/Plate2_MDA_assay_nopathcorrection.csv",
sep = ",",
skip=2,
header=TRUE,
fileEncoding="latin1")
raw_1004_plate2_mtx  <- as.matrix(raw_1004_plate2[c(1:8),c(3:14)])
colnames(raw_1004_plate2_mtx) = c("1","2","3","4","5","6","7","8","9","10","11","12")
rownames(raw_1004_plate2_mtx) = c("A","B","C","D","E","F","G","H")
raw_1004_plate2_table <- as.data.frame.table(raw_1004_plate2_mtx, responseName = "value") %>%
dplyr::rename(well_row=Var1, well_column=Var2, Abs_695nm_no_path_correct=value) %>%
dplyr::mutate(well=paste0(well_row,well_column),
Run_date ="20231004",
Plate="2") %>%
dplyr::select(-c(well_row,well_column))
# CUVETTE REFERENCE PATH CORRECTION  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Ran on 202031004 - Plate 1
raw_1004_plate1_cuv      <- read.csv(file="Data/Colorimetric_assays/MDA/Runs_20231004/Plate1/Plate1_MDA_assay_cuvette_ref.csv",
sep = ",",
skip=2,
header=TRUE,
fileEncoding="latin1")
raw_1004_plate1_cuv_mtx  <- as.matrix(raw_1004_plate1_cuv[c(1:8),c(3:14)])
colnames(raw_1004_plate1_cuv_mtx) = c("1","2","3","4","5","6","7","8","9","10","11","12")
rownames(raw_1004_plate1_cuv_mtx) = c("A","B","C","D","E","F","G","H")
raw_1004_plate1_cuv_table <- as.data.frame.table(raw_1004_plate1_cuv_mtx, responseName = "value") %>%
dplyr::rename(well_row=Var1, well_column=Var2, Abs_695nm_cov_ref_correct=value) %>%
dplyr::mutate(well=paste0(well_row,well_column),
Run_date ="20231004",
Plate="1") %>%
dplyr::mutate(Abs_695nm_cov_ref_correct =
case_when(Abs_695nm_cov_ref_correct == "Path?" ~ NA, # Path? replace as NA
TRUE ~ as.numeric(Abs_695nm_cov_ref_correct) ) ) %>% # print if not Path?
dplyr::select(-c(well_row,well_column))
# Ran on 20230828 - Plate 2
raw_1004_plate2_cuv      <- read.csv(file="Data/Colorimetric_assays/MDA/Runs_20231004/Plate2/Plate2_MDA_assay_cuvette_ref.csv",
sep = ",",
skip=2,
header=TRUE,
fileEncoding="latin1")
raw_1004_plate2_cuv_mtx  <- as.matrix(raw_1004_plate2_cuv[c(1:8),c(3:14)])
colnames(raw_1004_plate2_cuv_mtx) = c("1","2","3","4","5","6","7","8","9","10","11","12")
rownames(raw_1004_plate2_cuv_mtx) = c("A","B","C","D","E","F","G","H")
raw_1004_plate2_cuv_table <- as.data.frame.table(raw_1004_plate2_cuv_mtx, responseName = "value") %>%
dplyr::rename(well_row=Var1, well_column=Var2, Abs_695nm_cov_ref_correct=value) %>%
dplyr::mutate(well=paste0(well_row,well_column),
Run_date ="20231004",
Plate="2") %>%
dplyr::mutate(Abs_695nm_cov_ref_correct =
case_when(Abs_695nm_cov_ref_correct == "Path?" ~ NA, # Path? replace as NA
TRUE ~ as.numeric(Abs_695nm_cov_ref_correct) ) ) %>% # print if not Path?
dplyr::select(-c(well_row,well_column))
# INTERNAL WATER CONSTANT PATH CORRECTION  :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# Ran on 202031004 - Plate 1
raw_1004_plate1_water  <- read.csv(file="Data/Colorimetric_assays/MDA/Runs_20231004/Plate1/Plate1_MDA_assay_water_constant.csv",
sep = ",",
skip=1,
header=TRUE,
fileEncoding="latin1")
raw_1004_plate1_water_mtx  <- as.matrix(raw_1004_plate1_water[c(1:8),c(3:14)])
colnames(raw_1004_plate1_water_mtx) = c("1","2","3","4","5","6","7","8","9","10","11","12")
rownames(raw_1004_plate1_water_mtx) = c("A","B","C","D","E","F","G","H")
raw_1004_plate1_water_table <- as.data.frame.table(raw_1004_plate1_water_mtx, responseName = "value") %>%
dplyr::rename(well_row=Var1, well_column=Var2, Abs_695nm_water_constant_correct=value) %>%
dplyr::mutate(well=paste0(well_row,well_column),
Run_date ="20231004",
Plate="1") %>%
dplyr::mutate(Abs_695nm_water_constant_correct =
case_when(Abs_695nm_water_constant_correct == "Path?" ~ NA, # Path? replace as NA
TRUE ~ as.numeric(Abs_695nm_water_constant_correct) ) ) %>% # print if not Path?
dplyr::select(-c(well_row,well_column))
# Ran on 20230828 - Plate 2
raw_1004_plate2_water  <- read.csv(file="Data/Colorimetric_assays/MDA/Runs_20231004/Plate2/Plate2_MDA_assay_water_constant.csv",
sep = ",",
skip=2,
header=TRUE,
fileEncoding="latin1")
raw_1004_plate2_water_mtx  <- as.matrix(raw_1004_plate2_water[c(1:8),c(3:14)])
colnames(raw_1004_plate2_water_mtx) = c("1","2","3","4","5","6","7","8","9","10","11","12")
rownames(raw_1004_plate2_water_mtx) = c("A","B","C","D","E","F","G","H")
raw_1004_plate2_water_table <- as.data.frame.table(raw_1004_plate2_water_mtx, responseName = "value") %>%
dplyr::rename(well_row=Var1, well_column=Var2, Abs_695nm_water_constant_correct=value) %>%
dplyr::mutate(well=paste0(well_row,well_column),
Run_date ="20231004",
Plate="2") %>%
dplyr::mutate(Abs_695nm_water_constant_correct =
case_when(Abs_695nm_water_constant_correct == "Path?" ~ NA, # Path? replace as NA
TRUE ~ as.numeric(Abs_695nm_water_constant_correct) ) ) %>% # print if not Path?
dplyr::select(-c(well_row,well_column))
# MERGE WITHIN PLATE
raw_Plate1_MDA <-  merge(raw_1004_plate1_table,
(merge(raw_1004_plate1_cuv_table,raw_1004_plate1_water_table)) )
raw_Plate2_MDA <-  merge(raw_1004_plate2_table,
(merge(raw_1004_plate2_cuv_table,raw_1004_plate2_water_table)) )
# load metadata
metadata      <- read.csv(file="Data/Colorimetric_assays/MDA/Metadata_MDA.csv",
sep = ",",
header=TRUE)
# merge the rbind of all raw data with the metadat
raw_MDA_master <- merge( (rbind(raw_Plate1_MDA,raw_Plate2_MDA)),
(metadata %>% dplyr::select(!Notes)) )
nrow(raw_MDA_master) # 192
# View(raw_MDA_master) # view it if you want to
# plot the data to see any glaring outliers
raw_plot_no_cor <- raw_MDA_master %>%
dplyr::filter(Type %in% 'Sample') %>%
ggplot(aes(y = Abs_695nm_no_path_correct,
x  = Scallop_ID)) +
theme_bw() +
ggtitle("No path correction - raw") +
geom_point()
raw_plot_cuvette_cor <- raw_MDA_master %>%
dplyr::filter(Type %in% 'Sample') %>%
ggplot(aes(y = Abs_695nm_cov_ref_correct,
x  = Scallop_ID)) +
theme_bw() +
ggtitle("Cuvette reference correct - raw") +
geom_point()
raw_plot_water_cor <- raw_MDA_master %>%
dplyr::filter(Type %in% 'Sample') %>%
ggplot(aes(y = Abs_695nm_water_constant_correct,
x  = Scallop_ID)) +
theme_bw() +
ggtitle("Water constant correct - raw") +
geom_point()
ggarrange(raw_plot_no_cor,
raw_plot_cuvette_cor,
raw_plot_water_cor,
nrow=3)
# write csv
write.csv(raw_MDA_master, file = "Data/Colorimetric_assays/MDA/Raw_Master_MDA.csv")
raw_MDA_master %>% dplyr::filter((Scallop_ID == 73))
library(ggplot2)
library(dplyr)
library(tidyverse)
library(multcompView)
library(dplyr)
library(lme4)
library(ggplot2)
library(nlme)
library(car)
library(performance)
library(emmeans)
library(pander)
library(survival)
library(MASS)
library(vegan)
library(tidyverse)
# sets the working directory for the entire R markdown file - no need to reload the wd
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Cvirginica_multistressor/RAnalysis")
# EXPERIMENT METADATA
Exp_data <-  read.csv("Data/Survival/Survival_master.csv", header = T) %>%
filter(Day %in% 1) %>%
dplyr::select(c('Temp','OA','Salinity','Replicate','Id.', 'pH', 'AR')) %>%
dplyr::rename(Sample.ID = Id., Aragonite_saturation = AR)
#  LENGTH DATA - call it and add columns to merge
# day 1 - length data
raw_length_dat_Age1    <- read.csv("Data/Length/workbook/timepoint_1_Day1.csv", header = T,nrows=50) %>%
dplyr::mutate(Age = 1) %>%
dplyr::mutate(stage = 1)
# day 1 - length data
raw_length_dat_Age4    <- read.csv("Data/Length/workbook/timepoint_2_Day4.csv", header = T) %>%
dplyr::mutate(Age = 4) %>%
dplyr::mutate(stage = 1)
# day 8 - length data
raw_length_dat_Age8_1  <- read.csv("Data/Length/workbook/timepoint_3_Day8.csv", header = T) %>%
dplyr::mutate(Age = 8) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age8_2  <- read.csv("Data/Length/workbook/timepoint_3_Day8_additional_lengths.csv", header = T) %>%
dplyr::mutate(Age = 8) %>%
dplyr::mutate(stage = 1)
rbind(raw_length_dat_Age8_1,raw_length_dat_Age8_2)
# day 11 - length data
raw_length_dat_Age11   <- read.csv("Data/Length/workbook/timepoint_4_Day11.csv", header = T) %>%
dplyr::mutate(Age = 11) %>%
dplyr::mutate(stage = 1)
# day 15 - length data
raw_length_dat_Age15   <- read.csv("Data/Length/workbook/timepoint_5_Day15.csv", header = T) %>%
dplyr::select(-X) %>%
dplyr::mutate(Age = 15) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age19   <- read.csv("Data/Length/workbook/timepoint_6_Day19.csv", header = T) %>%
dplyr::mutate(Age = 19) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age22_larvae   <- read.csv("Data/Length/workbook/timepoint_7_Day22_larvae.csv", header = T) %>%
dplyr::mutate(Age = 22) %>%
dplyr::mutate(stage = 1)
raw_length_dat_Age22_spat   <- read.csv("Data/Length/workbook/timepoint_7_Day22_spat.csv", header = T) %>%
dplyr::mutate(Age = 22) %>%
dplyr::mutate(stage = 2)
# master raw length file
Masterlengthdata    <- as.data.frame(rbind(sapply(raw_length_dat_Age1, as.numeric),
sapply(raw_length_dat_Age4, as.numeric),
sapply(raw_length_dat_Age8_1, as.numeric),
sapply(raw_length_dat_Age8_2, as.numeric),
sapply(raw_length_dat_Age11, as.numeric),
sapply(raw_length_dat_Age15, as.numeric),
sapply(raw_length_dat_Age19, as.numeric),
sapply(raw_length_dat_Age22_larvae, as.numeric),
sapply(raw_length_dat_Age22_spat, as.numeric))) %>%
dplyr::mutate(stage = case_when(stage == 1 ~ 'larvae',
stage == 2 ~ 'spat'))
# Age 1
raw_length_Age1MELT <-  reshape2::melt((as.data.frame(Masterlengthdata) %>%
dplyr::filter(Age == 1))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age1_raw_length      <- merge(raw_length_Age1MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 1)
# Age 4
raw_length_Age4MELT <-  reshape2::melt((as.data.frame(Masterlengthdata) %>% dplyr::filter(Age == 4))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age4_raw_length      <- merge(raw_length_Age4MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 4)
# Age 8
raw_length_Age8MELT <-  reshape2::melt((as.data.frame(Masterlengthdata) %>% dplyr::filter(Age == 8))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age8_raw_length      <- merge(raw_length_Age8MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 8)
# Age 11
raw_length_Age11MELT <-  reshape2::melt((as.data.frame(Masterlengthdata) %>% dplyr::filter(Age == 11))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age11_raw_length      <- merge(raw_length_Age11MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 11)
# Age 15
raw_length_Age15MELT <- reshape2::melt((as.data.frame(Masterlengthdata) %>%
dplyr::filter(Age == 15))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age15_raw_length      <- merge(raw_length_Age15MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 15)
# Age 19
raw_length_Age19MELT <- reshape2::melt((as.data.frame(Masterlengthdata) %>%
dplyr::filter(Age == 19))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age19_raw_length      <- merge(raw_length_Age19MELT, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact = paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 19)
# Age 22
raw_length_Age22MELT_larvae  <- reshape2::melt((as.data.frame(Masterlengthdata) %>%
dplyr::filter(Age == 22 & stage == 'larvae'))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age22_raw_length_larvae   <- merge(raw_length_Age22MELT_larvae, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact = paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_', Replicate, sep = '')) %>%
dplyr::mutate(Age = 22)
raw_length_Age22MELT_spat  <- reshape2::melt((as.data.frame(Masterlengthdata) %>%
dplyr::filter(Age == 22 & stage == 'spat'))) %>%
na.omit %>%
dplyr::rename(length_um = value , Sample.ID =variable) %>%
dplyr::mutate(Sample.ID = gsub('.*Sample.','', Sample.ID))
Age22_raw_length_spat      <- merge(raw_length_Age22MELT_spat, Exp_data, by = 'Sample.ID')  %>%
dplyr::mutate(random_fact =
paste( substr(Temp,1,1),
substr(OA,1,1),
substr(Salinity,1,1), '_',
Replicate, sep = '')) %>%
dplyr::mutate(Age = 22)
Master_Lengths <- rbind(Age1_raw_length,
Age4_raw_length,
Age8_raw_length,
Age11_raw_length,
Age15_raw_length,
Age19_raw_length,
Age22_raw_length_larvae,
Age22_raw_length_spat)
#View(Master_Lengths)
write.csv(Master_Lengths, "Data/Length/cumulative_raw/Length_cumulative_raw.csv")# write
library(betareg) # runs a beta regression model suotable for proportion (percent data) between 0 and 1 (our live and dead cells data)
library(lmtest) # to receive p value from betareg model
library(FSA) # for the Dun test post hoc for SRH non-parametric 2 way anova]
library(emmeans)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(car)
library(lmerTest)
library(tidyr)
library(reshape2)
library(ggpubr)
library(nlme)
library(rcompanion) # to run the Schrier -Ray-Hare non parametric 2 way
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis") # sets the working directory for the entire R markdown file - no need to reload the wd
# getwd()
# read data
data  <- read.csv(file="../Data/FlowCytometry/Hemolymph_data_raw.csv", header = TRUE) %>%
dplyr::mutate(Scallop_ID = as.character(Scallop_ID))
# filter out data points based on visual diagnositcs of flow cytometry data
# criterion being, but not limited to, uninterpretable clouds showing no biological importance
# these data were (in most cases) specific to a probe and not the whole individual across all measurements
data_filt <- data %>%
# PERCENT/PROPORTION LIVE AND DEAD CELLS
# first denote NAs for SYBR + PI = 51 and 59 and 60
dplyr::mutate(SYBR_PI_count_alive= #as.numeric(sub(",", "", SYBR_PI_count_alive))) %>%
# ifelse(Scallop_ID %in% c('20', '51', '59', '56', '60', '70', '87', '89'),
ifelse(Scallop_ID %in% 5,
NA, as.numeric(SYBR_PI_count_alive))) %>% # for #s insert Na, else insert oG data
dplyr::mutate(SYBR_PI_count_dead= #as.numeric(sub(",", "", SYBR_PI_count_dead))) %>%
# ifelse(Scallop_ID %in% c('20', '51', '59', '56', '60', '70', '87', '89'),
ifelse(Scallop_ID %in% 5,
NA, as.numeric(SYBR_PI_count_dead))) %>% # for #s insert Na, else insert oG data
# MITOCHONDRIAL SUPEROXIDE DISMUTASE
# NA for mitosox green data day 1: = #s 24 and 74
# NA for mitosox green data day 14: 50 (no events), 27 (no/minimal events), 56 (cont. likely), 87 (strange density), 90 (cut off, but okay)
dplyr::mutate(MitoSoxGreen_Mean_FL1 = #as.numeric(sub(",", "", MitoSoxGreen_Mean_FL1))) %>%
# ifelse(Scallop_ID %in% c('24', '74', '27','50','56','87'),
ifelse(Scallop_ID %in% 5,
NA, as.numeric(MitoSoxGreen_Mean_FL1))) %>% # for #s insert Na, else insert oG data
# MITOCHONDRIAL MEMBRANE POTENTIAL DATA
# NA for JC-10 = 12,13, 51, 74
dplyr::mutate(JC10_FL1_monomer =  #as.numeric(JC10_FL1_monomer)) %>%
ifelse(Scallop_ID %in% c('5', '12', '13', '51', '74', # day 1 data that was marked as error
'56', '87'), # outliers in day 14 data
NA, JC10_FL1_monomer)) %>% # for #s insert Na, else insert oG data insert oG data
dplyr::mutate(JC10_FL2_Jaggregate =  #as.numeric(JC10_FL2_Jaggregate)) %>%
ifelse(Scallop_ID %in% c('12', '13', '51', '74', # day 1 data that was marked as error
'56', '87'), # outliers in day 14 data
NA, JC10_FL2_Jaggregate)) %>% # for #s insert Na, else insert oG data insert oG data
# calculate the FL2:FL1 ratio - this is our core data for this metric!
dplyr::mutate(JC10_FL2_FL1_Ratio = ( (as.numeric(JC10_FL2_Jaggregate)) /
(as.numeric(JC10_FL1_monomer)) ) )  %>%
# ADJUSTED PERCENT DATA - CHANGE TO PROPORTION 0-1
# the current precent alive and dead is proportion to ALL events of the cytogram - including those NOT dyed by SYBR and PI
# here we do an ADJ percent calc through sum of ONLY the live and dead events for a new 100
# second, adjusted 100% for ONLY counts live and dead
dplyr::mutate(SYBR_PI_prop_alive_ADJ = (SYBR_PI_count_alive/(SYBR_PI_count_alive+SYBR_PI_count_dead))) %>%
dplyr::mutate(SYBR_PI_prop_dead_ADJ = (SYBR_PI_count_dead/(SYBR_PI_count_alive+SYBR_PI_count_dead)))
#write csv for filtered data
data_filt %>% dplyr::filter(JC10_FL2_Jaggregate %in% NA) # as 12 13 5164 74 56 and 87
write.csv(data_filt, file = "../Data/FlowCytometry/Hemolymph_data_filtered.csv")
# FILTER DATA FOR THE DAY 1 AND DAY 14 DATA
Day1_datafilt  <- data_filt %>% dplyr::filter(Date %in% 20230502)
Day14_datafilt <- data_filt %>% dplyr::filter(Date %in% 20230516)
# View(Day14_datafilt)
# View(data)
# BUT WHAT DEPENDENT VARIBALES ARE AT PLAY HERE?
Day14_HighExp <- Day14_datafilt %>% dplyr::filter(pCO2_exposure %in% 'severe')
Day14_ModExp <- Day14_datafilt %>% dplyr::filter(pCO2_exposure %in% 'moderate')
# (1)
Day14_HighExp_LowModHist <- Day14_HighExp %>% dplyr::filter(pCO2_history %in% c('low', 'moderate'))
Day14_HighExp_LowModHist
anova_1_Alive <- anova(lm(SYBR_PI_prop_alive_ADJ ~ pCO2_history, data = Day14_HighExp_LowModHist)
# * prop live hemocytes
anova_1_Alive <- anova(lm(SYBR_PI_prop_alive_ADJ ~ pCO2_history, data = Day14_HighExp_LowModHist)
# * prop live hemocytes
anova_1_Alive <- anova(lm(SYBR_PI_prop_alive_ADJ ~ pCO2_history, data = Day14_HighExp_LowModHist))
anova_1_mtROS <- anova(lm(MitoSoxGreen_Mean_FL1 ~ pCO2_history, data = Day14_HighExp_LowModHist))
anova_1_mtPot <- anova(lm(JC10_FL2_FL1_Ratio ~ pCO2_history, data = Day14_HighExp_LowModHist))
shapiro.test(resid(anova_1_Alive))
shapiro.test(resid(anova_1_Alive))
# * prop live hemocytes
anova_1_Alive <- lm(SYBR_PI_prop_alive_ADJ ~ pCO2_history, data = Day14_HighExp_LowModHist)
shapiro.test(resid(anova_1_Alive))
levene.test(anova_1_Alive)
leveneTest(anova_1_Alive)
summary(aov(anova_1_Alive))
shapiro.test(resid(anova_1_mtROS)) # 0.1698 - norm
anova_1_mtROS <- anova(lm(MitoSoxGreen_Mean_FL1 ~ pCO2_history, data = Day14_HighExp_LowModHist))
shapiro.test(resid(anova_1_mtROS)) # 0.1698 - norm
shapiro.test(resid(anova_1_mtROS)) # 0.1698 - norm
anova_1_mtROS <- lm(MitoSoxGreen_Mean_FL1 ~ pCO2_history, data = Day14_HighExp_LowModHist)
shapiro.test(resid(anova_1_mtROS)) # 0.1698 - norm
leveneTest(anova_1_mtROS) # 0.5608 - homogeneity of variance
summary(aov(anova_1_mtROS))
anova_1_mtPot <- lm(JC10_FL2_FL1_Ratio ~ pCO2_history, data = Day14_HighExp_LowModHist)
shapiro.test(resid(anova_1_mtROS)) # 0.1732 - norm
leveneTest(anova_1_mtROS) # 0.7832 - homogeneity of variance
shapiro.test(resid(anova_1_mtPot)) # 0.1732 - norm
leveneTest(anova_1_mtPot) # 0.7832 - homogeneity of variance
summary(aov(anova_1_mtPot))
Day14_ModExp_LowModHist <- Day14_ModExp %>% dplyr::filter(pCO2_history %in% c('low', 'moderate'))
# * prop live hemocytes
anova_2_Alive <- lm(SYBR_PI_prop_alive_ADJ ~ pCO2_history, data = Day14_ModExp_LowModHist)
shapiro.test(resid(anova_2_Alive)) # 0.1698 - norm
leveneTest(anova_2_Alive) # 0.5608 - homogeneity of variance
summary(aov(anova_2_Alive))
anova_2_mtROS <- lm(MitoSoxGreen_Mean_FL1 ~ pCO2_history, data = Day14_ModExp_LowModHist)
shapiro.test(resid(anova_2_mtROS)) # 0.1732 - norm
leveneTest(anova_2_mtROS) # 0.7832 - homogeneity of variance
summary(aov(anova_2_mtROS))
anova_2_mtPot <- lm(JC10_FL2_FL1_Ratio ~ pCO2_history, data = Day14_ModExp_LowModHist)
shapiro.test(resid(anova_2_mtPot)) # 0.5571 - norm
leveneTest(anova_2_mtPot) # 0.278 - homogeneity of variance
summary(aov(anova_2_mtPot))
Day14_ModExp_LowSevHist <- Day14_ModExp %>% dplyr::filter(pCO2_history %in% c('low', 'severe'))
# * prop live hemocytes
anova_3_Alive <- lm(SYBR_PI_prop_alive_ADJ ~ pCO2_history, data = Day14_ModExp_LowSevHist)
shapiro.test(resid(anova_2_Alive)) # 0.5932 - norm
# * prop live hemocytes
anova_3_Alive <- lm(SYBR_PI_prop_alive_ADJ ~ pCO2_history, data = Day14_ModExp_LowSevHist)
shapiro.test(resid(anova_3_Alive)) # 0.5932 - norm
leveneTest(anova_3_Alive) # 0.2222 - homogeneity of variance
summary(aov(anova_3_Alive))
anova_3_mtROS <- lm(MitoSoxGreen_Mean_FL1 ~ pCO2_history, data = Day14_ModExp_LowSevHist)
shapiro.test(resid(anova_3_mtROS)) # 0.2455 - norm
leveneTest(anova_3_mtROS) # 0.7164 - homogeneity of variance
summary(aov(anova_3_mtROS))
anova_3_mtPot <- lm(JC10_FL2_FL1_Ratio ~ pCO2_history, data = Day14_ModExp_LowSevHist)
shapiro.test(resid(anova_3_mtPot)) # 0.5273 - norm
leveneTest(anova_3_mtPot) # 0.1648 - homogeneity of variance
summary(aov(anova_3_mtPot))
Day14_ModExp_ModSevHist <- Day14_ModExp %>% dplyr::filter(pCO2_history %in% c('moderate', 'severe'))
# * prop live hemocytes
anova_4_Alive <- lm(SYBR_PI_prop_alive_ADJ ~ pCO2_history, data = Day14_ModExp_ModSevHist)
shapiro.test(resid(anova_4_Alive)) # 0.459 - norm
leveneTest(anova_4_Alive) # 0.3987 - homogeneity of variance
summary(aov(anova_4_Alive))
anova_4_mtROS <- lm(MitoSoxGreen_Mean_FL1 ~ pCO2_history, data = Day14_ModExp_ModSevHist)
shapiro.test(resid(anova_4_mtROS)) # 0.593 - norm
leveneTest(anova_4_mtROS) # 0.2678 - homogeneity of variance
summary(aov(anova_4_mtROS))
anova_4_mtPot <- lm(JC10_FL2_FL1_Ratio ~ pCO2_history, data = Day14_ModExp_ModSevHist)
shapiro.test(resid(anova_4_mtPot)) # 0.1105 - norm
leveneTest(anova_4_mtPot) # 0.9437 - homogeneity of variance
summary(aov(anova_4_mtPot))
