pCO2history_1.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_1, 3))
pa                  = cluster::pam(pCO2history_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2history_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history (Low v. High)",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 1,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
AllpCO2_1.text <-  as.matrix(signif(moduleTraitPvalue_AllpCO2_1, 3))
AllpCO2_1.COR  <-  as.matrix(signif(moduleTraitCor_AllpCO2_1, 3))
pa                  = cluster::pam(AllpCO2_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.COR[i, j]), x, y, gp = gpar(fontsize = 10))
})
Heatmap(moduleTraitCor_pCO2exposure_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2exposure_1.COR[i, j]), x, y, gp = gpar(fontsize = 10))
})
pCO2exposure_1.text <-  as.matrix(signif(moduleTraitPvalue_pCO2exposure_1, 3))
pCO2exposure_1.COR  <-  as.matrix(signif(moduleTraitCor_pCO2exposure_1, 3))
pa                  = cluster::pam(pCO2exposure_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2exposure_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2exposure_1.COR[i, j]), x, y, gp = gpar(fontsize = 10))
})
# (2) Cohort differences under *match*
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pa                  = cluster::pam(pCO2history_2.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2history_2,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "pCO2 histories within their matched conditions",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_2.COR[i, j]), x, y, gp = gpar(fontsize = 10))
})
# (2) Cohort differences under *match*
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pa                  = cluster::pam(pCO2history_2.COR, k = 3)
col_fun             = colorRamp2(c(-1, 0, 1), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2history_2,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "pCO2 histories within their matched conditions",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_2.COR[i, j]), x, y, gp = gpar(fontsize = 10))
})
# (2) Cohort differences under *match*
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pa                  = cluster::pam(pCO2history_2.COR, k = 3)
col_fun             = colorRamp2(c(-1, 0, 1), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2history_2,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "pCO2 histories within their matched conditions",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_2.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
# (2) Cohort differences under *match*
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pa                  = cluster::pam(pCO2history_2.COR, k = 3)
col_fun             = colorRamp2(c(-0.8, 0, 0,8), c("blue", "white", "red"))
col_fun             = colorRamp2(c(-0.8, 0, 0.8), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2history_2,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "pCO2 histories within their matched conditions",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_2.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
# (2) Cohort differences under *match* SPECIFY THE NEW CUT LINE!
moduleColors_2 = dynamicColors_sign_2
dynamicColors_sign_2
# (2) Cohort differences under *match* SPECIFY THE NEW CUT LINE!
moduleColors_2 = dynamicColors_sign_2
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
cache = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
# knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
library(WGCNA) # note: this was previously installed with the command `BiocManager::install("WGCNA")`
library(dplyr)
library(zoo)
library(DESeq2)
# for heatmap
# library(devtools)
# install_github("jokergoo/ComplexHeatmap") first run these - commented out to avoid running a second time...
library(ComplexHeatmap)
library(circlize)
library(reshape2)
library(ggplot2)
library(hrbrthemes)
# (1) Response to challenge
load(file = "Output/Transcriptomics/WGCNA/challenge/Challenge-networkConstruction-stepByStep.RData")
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/Airradians_CellularMolecular_OA/RAnalysis")
# (1) Response to challenge
load(file = "Output/Transcriptomics/WGCNA/challenge/Challenge-networkConstruction-stepByStep.RData")
# (2) Cohort differences under *match*
load(file = "Output/Transcriptomics/WGCNA/cohorts/Cohorts-networkConstruction-stepByStep.RData")
nSamples_1 = 27
# (1) Response to challenge
pCO2history_1.asnum             <- data.frame(lapply(exp_metadata_1_pCO2history,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_pCO2history))
moduleTraitCor_pCO2history_1    <- cor(MEs_1, pCO2history_1.asnum, use = "p");
moduleTraitPvalue_pCO2history_1 <- corPvalueStudent(moduleTraitCor_pCO2history_1, nSamples_1);
pCO2exposure_1.asnum             <- data.frame(lapply(exp_metadata_1_pCO2exposure,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_pCO2exposure))
moduleTraitCor_pCO2exposure_1    <- cor(MEs_1, pCO2exposure_1.asnum, use = "p");
moduleTraitPvalue_pCO2exposure_1 <- corPvalueStudent(moduleTraitCor_pCO2exposure_1, nSamples_1);
AllpCO2_1.asnum             <- data.frame(lapply(exp_metadata_1_AllpCO2,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_AllpCO2))
moduleTraitCor_AllpCO2_1    <- cor(MEs_1, AllpCO2_1.asnum, use = "p");
moduleTraitPvalue_AllpCO2_1 <- corPvalueStudent(moduleTraitCor_AllpCO2_1, nSamples_1);
# (2) Cohort differences under *match*
nSamples_2 = 14
pCO2history_2.asnum             <- data.frame(lapply(exp_metadata_2_pCO2history,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_2_pCO2history))
moduleTraitCor_pCO2history_2    <- cor(MEs_2_merge, pCO2history_2.asnum, use = "p"); # merged modules!
moduleTraitPvalue_pCO2history_2 <- corPvalueStudent(moduleTraitCor_pCO2history_2, nSamples_2)
sizeGrWindow(10,10)
pCO2history_1.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_1, 3))
pCO2history_1.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_1, 3))
pa                  = cluster::pam(pCO2history_1.COR, k = 3)
col_fun             = colorRamp2(c(-0.5, 0, 0.5), c("blue", "white", "red"))
Heatmap(moduleTraitCor_pCO2history_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history (Low v. High)",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 1,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2history_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
pCO2exposure_1.COR  <-  as.matrix(signif(moduleTraitCor_pCO2exposure_1, 3))
pCO2exposure_1.COR
pCO2exposure_1.text <-  as.matrix(signif(moduleTraitPvalue_pCO2exposure_1, 3))
pCO2exposure_1.text
Heatmap(moduleTraitCor_pCO2exposure_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", pCO2exposure_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
grid.text(sprintf("%.1f", pCO2exposure_1.COR[i, j]), x, y, gp = gpar(fontsize = 10))
})
AllpCO2_1.text <-  as.matrix(signif(moduleTraitPvalue_AllpCO2_1, 3))
AllpCO2_1.text
AllpCO2_1.COR
AllpCO2_1.COR  <-  as.matrix(signif(moduleTraitCor_AllpCO2_1, 3))
AllpCO2_1.COR
Heatmap(moduleTraitCor_AllpCO2_1,
name = "gene_cor",
rect_gp = gpar(col = "grey", lwd = 1),
column_title = "All samples pCO2history x pCO2exposure",
column_title_gp = gpar(fontsize = 12, fontface = "bold"),
# row_title = "WGCNA modules",
#row_km = 4,
column_km = 2,
row_split = paste0("clstr", pa$clustering),
row_gap = unit(5, "mm"),
column_gap = unit(5, "mm"),
# grid.text(matrix(textMatrix)),
# border = TRUE,
border = TRUE,
col = col_fun,
cell_fun = function(j, i, x, y, width, height, fill) {
grid.text(sprintf("%.1f", AllpCO2_1.text[i, j]), x, y, gp = gpar(fontsize = 10))
})
pCO2history_1.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_1, 3))
pCO2history_1.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_1, 3))
pCO2history_1.text
pCO2history_1.COR
# (2) Cohort differences under *match*
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pCO2history_2.text
pCO2history_2.COR
# (2) Cohort differences under *match*
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pCO2history_2.text
pCO2history_2.COR
MEs_2
moduleLabels_2
moduleColors_2
dynamicColors_sign_2
# (2) Cohort differences under *match*
MEList_2 = moduleEigengenes(dds_2filt_master, colors = dynamicColors_sign_2)
# (2) Cohort differences under *match*
dynamicColors_sign_2 = labels2colors(dynamicMods_sign_2) # add colors to module labels (previously numbers)
# (2) Cohort differences under *match*
dynamicMods_sign_2 = cutreeDynamic(dendro = geneTree_sign_2, distM = dissTOM_sign_2,
deepSplit = 1, pamRespectsDendro = FALSE,
minClusterSize = minModuleSize);
# (2) Cohort differences under *match*
TOM_sign_2       = TOMsimilarity(adjacency_sign_2, TOMType="signed")  # this takes a long time.. just wait...
# (2) Cohort differences under *match*
softPower_2      = 10 # set your soft threshold based on the plots above
adjacency_sign_2 = adjacency(dds_2filt_master, power = softPower_2, type="signed") # this takes a long time.. just wait...
# (2) Cohort differences under *match*
TOM_sign_2       = TOMsimilarity(adjacency_sign_2, TOMType="signed")  # this takes a long time.. just wait...
dissTOM_sign_2   = 1-TOM_sign_2
# (2) Cohort differences under *match*
dynamicMods_sign_2 = cutreeDynamic(dendro = geneTree_sign_2, distM = dissTOM_sign_2,
deepSplit = 1, pamRespectsDendro = FALSE,
minClusterSize = minModuleSize);
minModuleSize = 100; # WGCNA authors recomend diligence when calling module size to avoid too many/too few modules...
# (2) Cohort differences under *match*
dynamicMods_sign_2 = cutreeDynamic(dendro = geneTree_sign_2, distM = dissTOM_sign_2,
deepSplit = 1, pamRespectsDendro = FALSE,
minClusterSize = minModuleSize);
# (2) Cohort differences under *match*
geneTree_sign_2   = hclust(as.dist(dissTOM_sign_2), method = "average");
# (2) Cohort differences under *match*
dynamicMods_sign_2 = cutreeDynamic(dendro = geneTree_sign_2, distM = dissTOM_sign_2,
deepSplit = 1, pamRespectsDendro = FALSE,
minClusterSize = minModuleSize);
# (2) Cohort differences under *match*
dynamicMods_sign_2 = cutreeDynamic(dendro = geneTree_sign_2, distM = dissTOM_sign_2,
deepSplit = 1, pamRespectsDendro = FALSE,
minClusterSize = minModuleSize);
table(dynamicMods_sign_2) # view the number of genes per module
# (2) Cohort differences under *match*
dynamicColors_sign_2 = labels2colors(dynamicMods_sign_2) # add colors to module labels (previously numbers)
table(dynamicColors_sign_2) # lets look at this table...
# (2) Cohort differences under *match*
MEList_2 = moduleEigengenes(dds_2filt_master, colors = dynamicColors_sign_2)
MEs_2    = MEList_2$eigengenes # you can view MEs, condenses gene counts down to a single number for each sample representive of that
MEDiss_2 = 1-cor(MEs_2); # Calculate dissimilarity of module eigengenes
METree_2 = hclust(as.dist(MEDiss_2), method = "average") # Cluster module eigengenes
# (2) Cohort differences under *match* SPECIFY THE NEW CUT LINE!
moduleColors_2 = dynamicColors_sign_2
moduleLabels_2 = match(moduleColors_2, colorOrder)-1;
colorOrder = c("grey", standardColors(50));
moduleLabels_2 = match(moduleColors_2, colorOrder)-1;
# (2) Cohort differences under *match*
save(dds_2filt, dds_2filt_master, exp_metadata_2_master,
exp_metadata_2_pCO2history,
MEs_2, MEs_2_merge, moduleLabels_2, moduleColors_2,  # Save module colors and labels for use in subsequent parts
file = "Output/Transcriptomics/WGCNA/cohorts/Cohorts-networkConstruction-stepByStep.RData")
# (2) Cohort differences under *match*
load(file = "Output/Transcriptomics/WGCNA/cohorts/Cohorts-networkConstruction-stepByStep.RData")
# (2) Cohort differences under *match*
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pCO2history_2.text
pCO2history_2.COR
nSamples_1 = 27
# (1) Response to challenge
pCO2history_1.asnum             <- data.frame(lapply(exp_metadata_1_pCO2history,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_pCO2history))
moduleTraitCor_pCO2history_1    <- cor(MEs_1, pCO2history_1.asnum, use = "p");
moduleTraitPvalue_pCO2history_1 <- corPvalueStudent(moduleTraitCor_pCO2history_1, nSamples_1);
pCO2exposure_1.asnum             <- data.frame(lapply(exp_metadata_1_pCO2exposure,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_pCO2exposure))
moduleTraitCor_pCO2exposure_1    <- cor(MEs_1, pCO2exposure_1.asnum, use = "p");
moduleTraitPvalue_pCO2exposure_1 <- corPvalueStudent(moduleTraitCor_pCO2exposure_1, nSamples_1);
AllpCO2_1.asnum             <- data.frame(lapply(exp_metadata_1_AllpCO2,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_AllpCO2))
moduleTraitCor_AllpCO2_1    <- cor(MEs_1, AllpCO2_1.asnum, use = "p");
moduleTraitPvalue_AllpCO2_1 <- corPvalueStudent(moduleTraitCor_AllpCO2_1, nSamples_1);
# (2) Cohort differences under *match*
nSamples_2 = 14
pCO2history_2.asnum             <- data.frame(lapply(exp_metadata_2_pCO2history,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_2_pCO2history))
moduleTraitCor_pCO2history_2    <- cor(MEs_2_merge, pCO2history_2.asnum, use = "p"); # merged modules!
moduleTraitPvalue_pCO2history_2 <- corPvalueStudent(moduleTraitCor_pCO2history_2, nSamples_2)
# (2) Cohort differences under *match*
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pCO2history_2.text
dynamicColors_sign_2
# (2) Cohort differences under *match*
dynamicColors_sign_2 = labels2colors(dynamicMods_sign_2) # add colors to module labels (previously numbers)
table(dynamicColors_sign_2) # lets look at this table...
# (2) Cohort differences under *match*
MEList_2 = moduleEigengenes(dds_2filt_master, colors = dynamicColors_sign_2)
MEs_2    = MEList_2$eigengenes # you can view MEs, condenses gene counts down to a single number for each sample representive of that
MEDiss_2 = 1-cor(MEs_2); # Calculate dissimilarity of module eigengenes
METree_2 = hclust(as.dist(MEDiss_2), method = "average") # Cluster module eigengenes
# Call an automatic merging function
MEList_2_merge = mergeCloseModules(dds_2filt_master, dynamicColors_sign_2, cutHeight = 0.4, verbose = 3)
# merge = mergeCloseModules(dds.d14_vst, dynamicColors_sign, cutHeight = 0.3, verbose = 3) # signed TOM
# important! I intentially called cutheaight below the modules (0.3 above) to see the downstream trajetory
# of these modules before shrunk down. Look below for the dendrogram including the raw and the merged modules
# appears the module merging is unneccessary considering the low number of moduales already
# The merged module colors
dynamicColors_sign_2_merge = MEList_2_merge$colors;
table(dynamicColors_sign_2_merge)
# black         blue         cyan        green    lightcyan   lightgreen midnightblue       purple          red
#  1800         2621         1219         1867         2712          224          304          597          819
# Eigengenes of the new merged modules:
MEs_2_merge = MEList_2_merge$newMEs;
MEDiss_2_merge = 1-cor(MEs_2_merge); # Calculate dissimilarity of module eigengenes
METree_2_merge = hclust(as.dist(MEDiss_2_merge), method = "average") # Cluster module eigengenes
# (2) Cohort differences under *match* SPECIFY THE NEW CUT LINE!
moduleColors_2 = dynamicColors_sign_2
moduleLabels_2 = match(moduleColors_2, colorOrder)-1;
# (2) Cohort differences under *match*
save(dds_2filt, dds_2filt_master, exp_metadata_2_master,
exp_metadata_2_pCO2history,
MEs_2, MEs_2_merge, moduleLabels_2, moduleColors_2,  # Save module colors and labels for use in subsequent parts
file = "Output/Transcriptomics/WGCNA/cohorts/Cohorts-networkConstruction-stepByStep.RData")
# (2) Cohort differences under *match*
load(file = "Output/Transcriptomics/WGCNA/cohorts/Cohorts-networkConstruction-stepByStep.RData")
nSamples_1 = 27
# (1) Response to challenge
pCO2history_1.asnum             <- data.frame(lapply(exp_metadata_1_pCO2history,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_pCO2history))
moduleTraitCor_pCO2history_1    <- cor(MEs_1, pCO2history_1.asnum, use = "p");
moduleTraitPvalue_pCO2history_1 <- corPvalueStudent(moduleTraitCor_pCO2history_1, nSamples_1);
pCO2exposure_1.asnum             <- data.frame(lapply(exp_metadata_1_pCO2exposure,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_pCO2exposure))
moduleTraitCor_pCO2exposure_1    <- cor(MEs_1, pCO2exposure_1.asnum, use = "p");
moduleTraitPvalue_pCO2exposure_1 <- corPvalueStudent(moduleTraitCor_pCO2exposure_1, nSamples_1);
AllpCO2_1.asnum             <- data.frame(lapply(exp_metadata_1_AllpCO2,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_1_AllpCO2))
moduleTraitCor_AllpCO2_1    <- cor(MEs_1, AllpCO2_1.asnum, use = "p");
moduleTraitPvalue_AllpCO2_1 <- corPvalueStudent(moduleTraitCor_AllpCO2_1, nSamples_1);
# (2) Cohort differences under *match*
nSamples_2 = 14
pCO2history_2.asnum             <- data.frame(lapply(exp_metadata_2_pCO2history,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_2_pCO2history))
moduleTraitCor_pCO2history_2    <- cor(MEs_2_merge, pCO2history_2.asnum, use = "p"); # merged modules!
moduleTraitPvalue_pCO2history_2 <- corPvalueStudent(moduleTraitCor_pCO2history_2, nSamples_2)
# (2) Cohort differences under *match*
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pCO2history_2.text
exp_metadata_2_pCO2history
pCO2history_2.asnum             <- data.frame(lapply(exp_metadata_2_pCO2history,
function(x) as.numeric(as.character(x))),
check.names=F,
row.names = row.names(exp_metadata_2_pCO2history))
moduleTraitCor_pCO2history_2    <- cor(MEs_2_merge, pCO2history_2.asnum, use = "p"); # merged modules!
moduleTraitPvalue_pCO2history_2 <- corPvalueStudent(moduleTraitCor_pCO2history_2, nSamples_2)
moduleTraitCor_pCO2history_2    <- cor(MEs_2, pCO2history_2.asnum, use = "p"); # merged modules!
moduleTraitPvalue_pCO2history_2 <- corPvalueStudent(moduleTraitCor_pCO2history_2, nSamples_2)
# (2) Cohort differences under *match*
pCO2history_2.text <-  as.matrix(signif(moduleTraitPvalue_pCO2history_2, 3))
pCO2history_2.COR  <-  as.matrix(signif(moduleTraitCor_pCO2history_2, 3))
pCO2history_2.text
pCO2history_2.COR
