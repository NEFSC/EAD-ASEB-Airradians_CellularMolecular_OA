# dplyr::filter(ResponseRatio  < 25) %>%
ggplot(aes(x=ResponseRatio, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
# scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.2)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.2)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Control ratio, under matched pCO2",
x = "Response ratio, under mismatched pCO2",
title = "Frontloading criteria (shaded)") +
expand_limits(x = 1.2, y = 1.2) +
annotate("rect", xmin = 0.9, xmax = 1, ymin = 1, ymax = 1.2,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
Frontloaded_plot_1.2
Frontloaded_plot_1.2 <- df_total_1.2 %>%
# dplyr::filter(ControlRatio < 5) %>%
# dplyr::filter(ResponseRatio  < 25) %>%
ggplot(aes(x=ResponseRatio, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
# scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.2)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.2)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Control ratio, under matched pCO2",
x = "Response ratio, under mismatched pCO2",
title = "Frontloading criteria (shaded)") +
expand_limits(x = 1.2, y = 1.2) +
annotate("rect", xmin = 0.9, xmax = 1, ymin = 1, ymax = 1.15,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
Frontloaded_plot_1.2
Frontloaded_plot_1.2 <- df_total_1.2 %>%
# dplyr::filter(ControlRatio < 5) %>%
# dplyr::filter(ResponseRatio  < 25) %>%
ggplot(aes(x=ResponseRatio, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
# scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.2)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.2)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Control ratio, under matched pCO2",
x = "Response ratio, under mismatched pCO2",
title = "Frontloading criteria (shaded)") +
expand_limits(x = 1.1, y = 1.15) +
annotate("rect", xmin = 0.9, xmax = 1, ymin = 1, ymax = 1.15,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
Frontloaded_plot_1.2
# truncate df_total for only genes assigned as 'frontloaded' from module red
Frontloaded_AirradiansTranscriptIDs <- merge((df_total_1.2 %>%
filter(Frontloaded_criteria == 'frontloaded')),
AirrdiansTranscript_Proteinnames_2,
by = c('Protein_name','Airradians.TranscriptID'))
nrow(Frontloaded_AirradiansTranscriptIDs) # 234,  379
# truncate the vst Exp means (mean exp for each gene within pCO2 history * pCO2 exposure, N = 5 each)
Frontload_vst       <- vstExp_ChallengeDOWN.long.meta.means %>%
dplyr::filter(Airradians.TranscriptID %in%
unique(Frontloaded_AirradiansTranscriptIDs$Airradians.TranscriptID))
Frontload_vst_levels <- Frontload_vst %>%
dplyr::filter(pCO2_exposure %in% c('low', 'severe')) %>%
dplyr::mutate(MatchMismatch = case_when(
(pCO2_history %in% 'low'    & pCO2_exposure %in% 'low')    ~ "baseline",
(pCO2_history %in% 'severe' & pCO2_exposure %in% 'severe') ~ "baseline",
(pCO2_history %in% 'low'    & pCO2_exposure %in% 'severe') ~ "change",
(pCO2_history %in% 'severe' & pCO2_exposure %in% 'low')    ~ "change",TRUE ~ NA
)) %>%
dplyr::mutate(IDvar = paste0(pCO2_history,MatchMismatch))
Frontload_vst_levels <- Frontload_vst %>%
dplyr::filter(pCO2_exposure %in% c('low', 'severe')) %>%
dplyr::mutate(MatchMismatch = case_when(
(pCO2_history %in% 'low'    & pCO2_exposure %in% 'low')    ~ "baseline",
(pCO2_history %in% 'severe' & pCO2_exposure %in% 'severe') ~ "baseline",
(pCO2_history %in% 'low'    & pCO2_exposure %in% 'moderate') ~ "change",
(pCO2_history %in% 'severe' & pCO2_exposure %in% 'moderate')    ~ "change",TRUE ~ NA
)) %>%
dplyr::mutate(IDvar = paste0(pCO2_history,MatchMismatch))
Frontload_vst_levels$MatchMismatch <- as.factor(Frontload_vst_levels$MatchMismatch)
Frontload_vst_levels$IDvar         <- as.factor(Frontload_vst_levels$IDvar)
Frontload_plotting <- Frontload_vst_levels %>%
dplyr::group_by(pCO2_history, MatchMismatch) %>%
dplyr::summarise(mean_meanvstExp = mean(mean.vstExp),
sd_vstExp = sd(mean.vstExp),
n = n(),
se_vstExp = sd_vstExp / sqrt(n))
Frontloaded_MEAN.SE_1.2 <- Frontload_plotting %>%
dplyr::filter(MatchMismatch %in% c('baseline', 'change')) %>%
ggplot(aes(x=MatchMismatch, y = mean_meanvstExp, fill=pCO2_history)) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history),
size = 4.5,position=position_dodge(.4)) +
geom_line() +
theme_classic() +
labs(y= "vst expression",
x = "pCO2 exposure",
title = "Frontloaded genes (N=234)") +
geom_errorbar(aes(ymin=(mean_meanvstExp)-(se_vstExp), # new means and se by treatment
ymax=(mean_meanvstExp)+(se_vstExp)), # new means and se by treatment
width=0,position=position_dodge(.4)) # width determines the length of the end ticks
Frontloaded_MEAN.SE_1.2
Frontload_vst
unique(Frontload_vst$pCO2_exposure)
Frontload_vst_levels <- Frontload_vst %>%
# dplyr::filter(pCO2_exposure %in% c('low', 'moderate')) %>%
dplyr::mutate(MatchMismatch = case_when(
(pCO2_history %in% 'low'    & pCO2_exposure %in% 'low')    ~ "baseline",
(pCO2_history %in% 'severe' & pCO2_exposure %in% 'severe') ~ "baseline",
(pCO2_history %in% 'low'    & pCO2_exposure %in% 'moderate') ~ "change",
(pCO2_history %in% 'severe' & pCO2_exposure %in% 'moderate')    ~ "change",TRUE ~ NA
)) %>%
dplyr::mutate(IDvar = paste0(pCO2_history,MatchMismatch))
Frontload_vst_levels$MatchMismatch <- as.factor(Frontload_vst_levels$MatchMismatch)
Frontload_vst_levels$IDvar         <- as.factor(Frontload_vst_levels$IDvar)
Frontload_plotting <- Frontload_vst_levels %>%
dplyr::group_by(pCO2_history, MatchMismatch) %>%
dplyr::summarise(mean_meanvstExp = mean(mean.vstExp),
sd_vstExp = sd(mean.vstExp),
n = n(),
se_vstExp = sd_vstExp / sqrt(n))
Frontloaded_MEAN.SE_1.2 <- Frontload_plotting %>%
dplyr::filter(MatchMismatch %in% c('baseline', 'change')) %>%
ggplot(aes(x=MatchMismatch, y = mean_meanvstExp, fill=pCO2_history)) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history),
size = 4.5,position=position_dodge(.4)) +
geom_line() +
theme_classic() +
labs(y= "vst expression",
x = "pCO2 exposure",
title = "Frontloaded genes (N=234)") +
geom_errorbar(aes(ymin=(mean_meanvstExp)-(se_vstExp), # new means and se by treatment
ymax=(mean_meanvstExp)+(se_vstExp)), # new means and se by treatment
width=0,position=position_dodge(.4)) # width determines the length of the end ticks
Frontloaded_MEAN.SE_1.2
Frontloaded_MEAN.SE_1.2 <- Frontload_plotting %>%
dplyr::filter(MatchMismatch %in% c('baseline', 'change')) %>%
ggplot(aes(x=MatchMismatch, y = mean_meanvstExp, fill=pCO2_history)) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history),
size = 4.5,position=position_dodge(.4)) +
geom_line() +
theme_classic() +
labs(y= "vst expression",
x = "pCO2 exposure",
title = "Frontloaded genes (N=324)") +
geom_errorbar(aes(ymin=(mean_meanvstExp)-(se_vstExp), # new means and se by treatment
ymax=(mean_meanvstExp)+(se_vstExp)), # new means and se by treatment
width=0,position=position_dodge(.4)) # width determines the length of the end ticks
Frontloaded_MEAN.SE_1.2
Activated_plot_1.2 <- df_total_1.2 %>%
# dplyr::filter(ControlRatio < 5) %>%
# dplyr::filter(ResponseRatio  < 25) %>%
ggplot(aes(x=ResponseRatio, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
# scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.2)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.2)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Control ratio, under matched pCO2",
x = "Response ratio, under mismatched pCO2",
title = "Activated criteria (shaded)") +
expand_limits(x = 1.2, y = 1.2) +
annotate("rect", xmin = 1.05, xmax = 1, ymin = 1, ymax = 1.2,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
Activated_plot_1.2
Activated_plot_1.2 <- df_total_1.2 %>%
# dplyr::filter(ControlRatio < 5) %>%
# dplyr::filter(ResponseRatio  < 25) %>%
ggplot(aes(x=ResponseRatio, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
# scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.2)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.2)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Control ratio, under matched pCO2",
x = "Response ratio, under mismatched pCO2",
title = "Activated criteria (shaded)") +
expand_limits(x = 1.1, y = 1.15) +
annotate("rect", xmin = 1.05, xmax = 1, ymin = 1, ymax = 1.2,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
Activated_plot_1.2
Activated_plot_1.2 <- df_total_1.2 %>%
# dplyr::filter(ControlRatio < 5) %>%
# dplyr::filter(ResponseRatio  < 25) %>%
ggplot(aes(x=ResponseRatio, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
# scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.2)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.2)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Control ratio, under matched pCO2",
x = "Response ratio, under mismatched pCO2",
title = "Activated criteria (shaded)") +
expand_limits(x = 1.1, y = 1.15) +
annotate("rect", xmin = 1.15, xmax = 1, ymin = 1, ymax = 1.1,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
Activated_plot_1.2
Activated_plot_1.2 <- df_total_1.2 %>%
# dplyr::filter(ControlRatio < 5) %>%
# dplyr::filter(ResponseRatio  < 25) %>%
ggplot(aes(x=ResponseRatio, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
# scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.2)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.2)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Control ratio, under matched pCO2",
x = "Response ratio, under mismatched pCO2",
title = "Activated criteria (shaded)") +
expand_limits(x = 1.15, y = 1.1) +
annotate("rect", xmin = 1.15, xmax = 1, ymin = 1, ymax = 1.1,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
Activated_plot_1.2
Activated_AirradiansTranscriptIDs <- merge((df_total_1.2 %>% filter(Frontloaded_criteria == 'activated')),
AirrdiansTranscript_Proteinnames_2,
by = c('Protein_name','Airradians.TranscriptID'))
nrow(Activated_AirradiansTranscriptIDs) # 87
# truncate the vst Exp means (mean exp for each gene within pCO2 history * pCO2 exposure, N = 5 each)
Activated_vst       <- vstExp_ChallengeDOWN.long.meta.means %>%
dplyr::filter(Airradians.TranscriptID %in%
unique(Activated_AirradiansTranscriptIDs$Airradians.TranscriptID))
Activated_vst_levels <- Activated_vst %>%
# dplyr::filter(pCO2_exposure %in% c('low', 'severe')) %>%
dplyr::mutate(MatchMismatch = case_when(
(pCO2_history %in% 'low'    & pCO2_exposure %in% 'low')    ~ "baseline",
(pCO2_history %in% 'severe' & pCO2_exposure %in% 'severe') ~ "baseline",
(pCO2_history %in% 'low'    & pCO2_exposure %in% 'moderate') ~ "change",
(pCO2_history %in% 'severe' & pCO2_exposure %in% 'moderate')    ~ "change",TRUE ~ NA
)) %>%
dplyr::mutate(IDvar = paste0(pCO2_history,MatchMismatch))
Activated_vst_levels$MatchMismatch <- as.factor(Activated_vst_levels$MatchMismatch)
Activated_vst_levels$IDvar         <- as.factor(Activated_vst_levels$IDvar)
Activated_plotting <- Activated_vst_levels %>%
dplyr::group_by(pCO2_history, MatchMismatch) %>%
dplyr::summarise(mean_meanvstExp = mean(mean.vstExp),
sd_vstExp = sd(mean.vstExp),
n = n(),
se_vstExp = sd_vstExp / sqrt(n)
)
Activated_MEAN.SE_1.2 <- Activated_plotting %>%
dplyr::filter(MatchMismatch %in% c('baseline', 'change')) %>%
ggplot(aes(x=MatchMismatch, y = mean_meanvstExp, fill=pCO2_history)) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history),
size = 4.5,position=position_dodge(.4)) +
geom_line() +
theme_classic() +
labs(y= "vst expression",
x = "pCO2 exposure",
title = "Activated genes (N=87)") +
geom_errorbar(aes(ymin=(mean_meanvstExp)-(se_vstExp), # new means and se by treatment
ymax=(mean_meanvstExp)+(se_vstExp)), # new means and se by treatment
width=0,position=position_dodge(.4)) # width determines the length of the end ticks
# pdf("Output/Transcriptomics/WGCNA/challenge/Frontloading/UPmodulered_Severe.pdf", height=8, width =8)
ggarrange(Frontloading_plot_1.2, Frontloaded_MEAN.SE_1.2,
Activated_plot_1.2,    Activated_MEAN.SE_1.2,
ncol=2, nrow=2)
# pdf("Output/Transcriptomics/WGCNA/challenge/Frontloading/UPmodulered_Severe.pdf", height=8, width =8)
ggarrange(Frontloading_plot_1.2, Frontloaded_MEAN.SE_1.2,
Activated_plot_1.2,    Activated_MEAN.SE_1.2,
ncol=2, nrow=2)
Frontloaded_MEAN.SE_1.2 <- Frontload_plotting %>%
dplyr::filter(MatchMismatch %in% c('baseline', 'change')) %>%
ggplot(aes(x=MatchMismatch, y = mean_meanvstExp, fill=pCO2_history)) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history),
size = 4.5,position=position_dodge(.4)) +
geom_line() +
theme_classic() +
labs(y= "vst expression",
x = "pCO2 exposure",
title = "Costly activation genes (N=324)") +
geom_errorbar(aes(ymin=(mean_meanvstExp)-(se_vstExp), # new means and se by treatment
ymax=(mean_meanvstExp)+(se_vstExp)), # new means and se by treatment
width=0,position=position_dodge(.4)) # width determines the length of the end ticks
Frontloaded_plot_1.2 <- df_total_1.2 %>%
# dplyr::filter(ControlRatio < 5) %>%
# dplyr::filter(ResponseRatio  < 25) %>%
ggplot(aes(x=ResponseRatio, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
# scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.2)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.2)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Control ratio, under matched pCO2",
x = "Response ratio, under mismatched pCO2",
title = "Costly activation criteria (shaded)") +
expand_limits(x = 1.1, y = 1.15) +
annotate("rect", xmin = 0.9, xmax = 1, ymin = 1, ymax = 1.15,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
Activated_plot_1.2 <- df_total_1.2 %>%
# dplyr::filter(ControlRatio < 5) %>%
# dplyr::filter(ResponseRatio  < 25) %>%
ggplot(aes(x=ResponseRatio, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
# scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.2)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.2)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Control ratio, under matched pCO2",
x = "Response ratio, under mismatched pCO2",
title = "Threshold 'likely' (shaded)") +
expand_limits(x = 1.15, y = 1.1) +
annotate("rect", xmin = 1.15, xmax = 1, ymin = 1, ymax = 1.1,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
Activated_MEAN.SE_1.2 <- Activated_plotting %>%
dplyr::filter(MatchMismatch %in% c('baseline', 'change')) %>%
ggplot(aes(x=MatchMismatch, y = mean_meanvstExp, fill=pCO2_history)) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history),
size = 4.5,position=position_dodge(.4)) +
geom_line() +
theme_classic() +
labs(y= "vst expression",
x = "pCO2 exposure",
title = "Threshold 'likely' genes (N=259)") +
geom_errorbar(aes(ymin=(mean_meanvstExp)-(se_vstExp), # new means and se by treatment
ymax=(mean_meanvstExp)+(se_vstExp)), # new means and se by treatment
width=0,position=position_dodge(.4)) # width determines the length of the end ticks
# pdf("Output/Transcriptomics/WGCNA/challenge/Frontloading/UPmodulered_Severe.pdf", height=8, width =8)
ggarrange(Frontloading_plot_1.2, Frontloaded_MEAN.SE_1.2,
Activated_plot_1.2,    Activated_MEAN.SE_1.2,
ncol=2, nrow=2)
Frontloaded_plot_1.2 <- df_total_1.2 %>%
# dplyr::filter(ControlRatio < 5) %>%
# dplyr::filter(ResponseRatio  < 25) %>%
ggplot(aes(x=ResponseRatio, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
# scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.2)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.2)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Control ratio, under matched pCO2",
x = "Response ratio, under mismatched pCO2",
title = "Costly activation criteria (shaded)") +
expand_limits(x = 1.1, y = 1.15) +
annotate("rect", xmin = 0.9, xmax = 1, ymin = 1, ymax = 1.15,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
Frontloaded_plot_1.2
ggarrange(Frontloading_plot_1.2, Frontloaded_MEAN.SE_1.2,
Activated_plot_1.2,    Activated_MEAN.SE_1.2,
ncol=2, nrow=2)
ggarrange(Frontloaded_plot_1.2, Frontloaded_MEAN.SE_1.2,
Activated_plot_1.2,    Activated_MEAN.SE_1.2,
ncol=2, nrow=2)
Activated_AirradiansTranscriptIDs <- merge((df_total_1.2 %>% filter(Frontloaded_criteria == 'activated')),
AirrdiansTranscript_Proteinnames_2,
by = c('Protein_name','Airradians.TranscriptID'))
# truncate df_total for only genes assigned as 'frontloaded' from module red
Frontloaded_AirradiansTranscriptIDs <- merge((df_total_1.2 %>%
filter(Frontloaded_criteria == 'frontloaded')),
AirrdiansTranscript_Proteinnames_2,
by = c('Protein_name','Airradians.TranscriptID'))
View(Frontloaded_AirradiansTranscriptIDs)
View(Activated_AirradiansTranscriptIDs)
# pdf("Output/Transcriptomics/WGCNA/challenge/Frontloading/UPmodulered_Severe.pdf", height=8, width =8)
ggarrange(Frontloading_plot_1.2, Frontloaded_MEAN.SE_1.2,
Activated_plot_1.2,    Activated_MEAN.SE_1.2,
ncol=2, nrow=2)
# pdf("Output/Transcriptomics/WGCNA/challenge/Frontloading/UPmodulered_Severe.pdf", height=8, width =8)
ggarrange(Frontloaded_plot_1.2, Frontloaded_MEAN.SE_1.2,
Activated_plot_1.2,    Activated_MEAN.SE_1.2,
ncol=2, nrow=2)
# Out put the plots
# pdf("Output/Transcriptomics/WGCNA/challenge/Frontloading/UPmodulered_Severe.pdf", height=8, width =8)
ggarrange(Frontloaded_plot_1.2, Frontloaded_MEAN.SE_1.2,
Activated_plot_1.2,    Activated_MEAN.SE_1.2,
ncol=2, nrow=2)
ggarrange(Frontloading_plot_1.1, Frontloaded_MEAN.SE_1.1,
Activated_plot_1.1,    Activated_MEAN.SE_1.1,
ncol=2, nrow=2)
ggarrange(Frontloaded_plot_1.1, Frontloaded_MEAN.SE_1.1,
Activated_plot_1.1,    Activated_MEAN.SE_1.1,
ncol=2, nrow=2)
Frontloaded_plot_1.1 <- df_total_1.1 %>%
# dplyr::filter(ControlRatio < 5) %>%
# dplyr::filter(ResponseRatio  < 25) %>%
ggplot(aes(x=ResponseRatio, y=ControlRatio)) +
geom_point(aes(color='grey80', na.rm=TRUE)) +
scale_shape_manual(values=c(19,19)) +
scale_color_manual(values=c("grey", "black")) +
theme_classic() +
# scale_x_continuous(expand = c(0, 0), limits = c(0.9,1.1)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0.95,1.1)) +
stat_smooth(method = "lm",
formula = y ~ x + poly(x, 2) - 1) +
geom_vline(xintercept=1, linetype="dotted") +
geom_hline(yintercept=1, linetype="dotted") +
labs(y= "Control ratio, under matched pCO2",
x = "Response ratio, under mismatched pCO2",
title = "Frontloading criteria (shaded)") +
expand_limits(x = 1.1, y = 1.1) +
annotate("rect", xmin = 0.9, xmax = 1, ymin = 1, ymax = 1.1,
alpha = .2) +
theme(legend.position="none", text = element_text(size=10))
# truncate df_total for only genes assigned as 'frontloaded' from module red
Frontloaded_AirradiansTranscriptIDs <- merge((df_total_1.1 %>%
filter(Frontloaded_criteria == 'frontloaded')),
AirrdiansTranscript_Proteinnames_2,
by = c('Protein_name','Airradians.TranscriptID'))
nrow(Frontloaded_AirradiansTranscriptIDs) # 234,  379
# truncate the vst Exp means (mean exp for each gene within pCO2 history * pCO2 exposure, N = 5 each)
Frontload_vst       <- vstExp_ChallengeUP.long.meta.means %>%
dplyr::filter(Airradians.TranscriptID %in%
unique(Frontloaded_AirradiansTranscriptIDs$Airradians.TranscriptID))
Frontload_vst_levels <- Frontload_vst %>%
dplyr::filter(pCO2_exposure %in% c('low', 'severe')) %>%
dplyr::mutate(MatchMismatch = case_when(
(pCO2_history %in% 'low'    & pCO2_exposure %in% 'low')    ~ "baseline",
(pCO2_history %in% 'severe' & pCO2_exposure %in% 'severe') ~ "baseline",
(pCO2_history %in% 'low'    & pCO2_exposure %in% 'severe') ~ "change",
(pCO2_history %in% 'severe' & pCO2_exposure %in% 'low')    ~ "change",TRUE ~ NA
)) %>%
dplyr::mutate(IDvar = paste0(pCO2_history,MatchMismatch))
Frontload_vst_levels$MatchMismatch <- as.factor(Frontload_vst_levels$MatchMismatch)
Frontload_vst_levels$IDvar         <- as.factor(Frontload_vst_levels$IDvar)
Frontload_plotting <- Frontload_vst_levels %>%
dplyr::group_by(pCO2_history, MatchMismatch) %>%
dplyr::summarise(mean_meanvstExp = mean(mean.vstExp),
sd_vstExp = sd(mean.vstExp),
n = n(),
se_vstExp = sd_vstExp / sqrt(n))
Frontloaded_MEAN.SE_1.1 <- Frontload_plotting %>%
dplyr::filter(MatchMismatch %in% c('baseline', 'change')) %>%
ggplot(aes(x=MatchMismatch, y = mean_meanvstExp, fill=pCO2_history)) +
geom_point(aes(shape=pCO2_history, fill=pCO2_history),
size = 4.5,position=position_dodge(.4)) +
geom_line() +
theme_classic() +
labs(y= "vst expression",
x = "pCO2 exposure",
title = "Frontloaded genes (N=234)") +
geom_errorbar(aes(ymin=(mean_meanvstExp)-(se_vstExp), # new means and se by treatment
ymax=(mean_meanvstExp)+(se_vstExp)), # new means and se by treatment
width=0,position=position_dodge(.4)) # width determines the length of the end ticks
ggarrange(Frontloaded_plot_1.1, Frontloaded_MEAN.SE_1.1,
Activated_plot_1.1,    Activated_MEAN.SE_1.1,
ncol=2, nrow=2)
mod <- lm(mean.vstExp~pCO2_history*MatchMismatch,data=Frontload_vst_levels)
# STATISTICS
library(car)
levene.test(mod)
leveneTest(mod)
shapiro.test(resid(mod)) # p-value < 2.2e-16
?scheirerRayHare
library(Rmisc)
leveneTest(mod) #0.9094
mod <- scheirerRayHare(mean.vstExp~pCO2_history*MatchMismatch,data=Frontload_vst_levels)
library(rcompanion)
mod <- scheirerRayHare(mean.vstExp~pCO2_history*MatchMismatch,data=Frontload_vst_levels)
mod
# Kruskal-Wallis chi-squared = 16.9, df = 3, p-value = 0.0007411
modDunn <-  dunnTest(mean.vstExp ~ IDvar,
data=Frontload_vst_levels,
method="bh")
library(FSA)
# Kruskal-Wallis chi-squared = 16.9, df = 3, p-value = 0.0007411
modDunn <-  dunnTest(mean.vstExp ~ IDvar,
data=Frontload_vst_levels,
method="bh")
modDunn
